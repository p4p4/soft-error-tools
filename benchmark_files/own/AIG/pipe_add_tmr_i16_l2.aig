aig 1370 16 204 17 1150
1
0
703
711
719
727
735
743
751
759
767
775
783
791
799
807
815
1
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
1
0
703
711
719
727
735
743
751
759
767
775
783
791
799
807
815
1
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
1
0
703
711
719
727
735
743
751
759
767
775
783
791
799
807
815
1
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
1
833
869
911
953
995
1037
1079
1121
1163
1205
1247
1289
1331
1373
1415
1457
1
824
844
878
920
962
1004
1046
1088
1130
1172
1214
1256
1298
1340
1382
1424
1
1475
1511
1553
1595
1637
1679
1721
1763
1805
1847
1889
1931
1973
2015
2057
2099
1
1466
1486
1520
1562
1604
1646
1688
1730
1772
1814
1856
1898
1940
1982
2024
2066
1
2117
2153
2195
2237
2279
2321
2363
2405
2447
2489
2531
2573
2615
2657
2699
2741
1
2108
2128
2162
2204
2246
2288
2330
2372
2414
2456
2498
2540
2582
2624
2666
2708
457
473
489
505
521
537
553
569
585
601
617
633
649
665
681
697
0
 àHÿñVÊ§dÙ≤rÇ
¿
Ä
êŒéû‹ú¨Í™∫¯∏»Ü∆÷î‘‰¢‚Ú∞Äæ˛éÃåú ⁄ ö µ∏∏∫ªæ¿¡ƒ∆« ÃÕ–“”÷ÿŸ‹ﬁﬂ‚‰ÂËÍÎÓÒÙˆ˜˙¸˝ÄÇÉÜàâãéèÔÚÛ	
ù†£ÅÑá	Ω¿≈°§©&
.		Â	ËÔ…	Ã”#%		çê
ôÒÙ
˝#%		µ∏√ôúß#%		›‡Ì¡ƒ—#%		ÖàóÈÏ˚#%		≠∞¡ëî•#%		’ÿÎπºœ#%		˝Ä	ï	·‰˘#%		•	®	ø	â	å	£	#%		Õ	–	È	±	¥	Õ	#%		ı	¯	ì
Ÿ	‹	˜	#%		ù
†
Ω
Å
Ñ
°
#%		≈
!»
 Á
©
!¨
 À
#%		…
Ã
Õ
≠
∞
±
	
€
ﬁ
·
ø
¬
≈
	˚
˛
Éﬂ
‚
Á
&
.		£	¶≠á	äë#%		ÀŒ
◊Ø≤
ª#%		ÛˆÅ◊⁄Â#%		õû´ˇÇè#%		√∆’ß™π#%		ÎÓˇœ“„#%		ìñ©˜˙ç#%		ªæ”ü¢∑#%		„Ê˝« ·#%		ãéßÔÚã#%		≥∂—óöµ#%		€ﬁ˚ø¬ﬂ#%		É!Ü •Á!Í â#%		áäãÎÓÔ	
ôúü˝ÄÉ	πº¡ù†•&
.		·	‰Î≈	»œ#%		âå
ïÌ
˘#%		±¥øïò£#%		Ÿ‹ÈΩ¿Õ#%		ÅÑìÂË˜#%		©¨Ωçê°#%		—‘Áµ∏À#%		˘¸ë›‡ı#%		°§ªÖàü#%		…ÃÂ≠∞…#%		ÒÙè’ÿÛ#%		ôúπ˝Äù#%		¡!ƒ „•!® «#%		i0 input_vector<0>
i1 input_vector<1>
i2 input_vector<2>
i3 input_vector<3>
i4 input_vector<4>
i5 input_vector<5>
i6 input_vector<6>
i7 input_vector<7>
i8 input_vector<8>
i9 input_vector<9>
i10 input_vector<10>
i11 input_vector<11>
i12 input_vector<12>
i13 input_vector<13>
i14 input_vector<14>
i15 input_vector<15>
l0 top|full_adder_nbit(1)|d_ff(2)|n65
l1 top|full_adder_nbit(1)|d_ff(2)|memory<0>_out
l2 top|full_adder_nbit(1)|d_ff(2)|memory<1>_out
l3 top|full_adder_nbit(1)|d_ff(2)|memory<2>_out
l4 top|full_adder_nbit(1)|d_ff(2)|memory<3>_out
l5 top|full_adder_nbit(1)|d_ff(2)|memory<4>_out
l6 top|full_adder_nbit(1)|d_ff(2)|memory<5>_out
l7 top|full_adder_nbit(1)|d_ff(2)|memory<6>_out
l8 top|full_adder_nbit(1)|d_ff(2)|memory<7>_out
l9 top|full_adder_nbit(1)|d_ff(2)|memory<8>_out
l10 top|full_adder_nbit(1)|d_ff(2)|memory<9>_out
l11 top|full_adder_nbit(1)|d_ff(2)|memory<10>_out
l12 top|full_adder_nbit(1)|d_ff(2)|memory<11>_out
l13 top|full_adder_nbit(1)|d_ff(2)|memory<12>_out
l14 top|full_adder_nbit(1)|d_ff(2)|memory<13>_out
l15 top|full_adder_nbit(1)|d_ff(2)|memory<14>_out
l16 top|full_adder_nbit(1)|d_ff(2)|memory<15>_out
l17 top|full_adder_nbit(1)|d_ff(3)|n65
l18 top|full_adder_nbit(1)|d_ff(3)|memory<0>_out
l19 top|full_adder_nbit(1)|d_ff(3)|memory<1>_out
l20 top|full_adder_nbit(1)|d_ff(3)|memory<2>_out
l21 top|full_adder_nbit(1)|d_ff(3)|memory<3>_out
l22 top|full_adder_nbit(1)|d_ff(3)|memory<4>_out
l23 top|full_adder_nbit(1)|d_ff(3)|memory<5>_out
l24 top|full_adder_nbit(1)|d_ff(3)|memory<6>_out
l25 top|full_adder_nbit(1)|d_ff(3)|memory<7>_out
l26 top|full_adder_nbit(1)|d_ff(3)|memory<8>_out
l27 top|full_adder_nbit(1)|d_ff(3)|memory<9>_out
l28 top|full_adder_nbit(1)|d_ff(3)|memory<10>_out
l29 top|full_adder_nbit(1)|d_ff(3)|memory<11>_out
l30 top|full_adder_nbit(1)|d_ff(3)|memory<12>_out
l31 top|full_adder_nbit(1)|d_ff(3)|memory<13>_out
l32 top|full_adder_nbit(1)|d_ff(3)|memory<14>_out
l33 top|full_adder_nbit(1)|d_ff(3)|memory<15>_out
l34 top|full_adder_nbit(4)|d_ff(5)|n65
l35 top|full_adder_nbit(4)|d_ff(5)|memory<0>_out
l36 top|full_adder_nbit(4)|d_ff(5)|memory<1>_out
l37 top|full_adder_nbit(4)|d_ff(5)|memory<2>_out
l38 top|full_adder_nbit(4)|d_ff(5)|memory<3>_out
l39 top|full_adder_nbit(4)|d_ff(5)|memory<4>_out
l40 top|full_adder_nbit(4)|d_ff(5)|memory<5>_out
l41 top|full_adder_nbit(4)|d_ff(5)|memory<6>_out
l42 top|full_adder_nbit(4)|d_ff(5)|memory<7>_out
l43 top|full_adder_nbit(4)|d_ff(5)|memory<8>_out
l44 top|full_adder_nbit(4)|d_ff(5)|memory<9>_out
l45 top|full_adder_nbit(4)|d_ff(5)|memory<10>_out
l46 top|full_adder_nbit(4)|d_ff(5)|memory<11>_out
l47 top|full_adder_nbit(4)|d_ff(5)|memory<12>_out
l48 top|full_adder_nbit(4)|d_ff(5)|memory<13>_out
l49 top|full_adder_nbit(4)|d_ff(5)|memory<14>_out
l50 top|full_adder_nbit(4)|d_ff(5)|memory<15>_out
l51 top|full_adder_nbit(4)|d_ff(6)|n65
l52 top|full_adder_nbit(4)|d_ff(6)|memory<0>_out
l53 top|full_adder_nbit(4)|d_ff(6)|memory<1>_out
l54 top|full_adder_nbit(4)|d_ff(6)|memory<2>_out
l55 top|full_adder_nbit(4)|d_ff(6)|memory<3>_out
l56 top|full_adder_nbit(4)|d_ff(6)|memory<4>_out
l57 top|full_adder_nbit(4)|d_ff(6)|memory<5>_out
l58 top|full_adder_nbit(4)|d_ff(6)|memory<6>_out
l59 top|full_adder_nbit(4)|d_ff(6)|memory<7>_out
l60 top|full_adder_nbit(4)|d_ff(6)|memory<8>_out
l61 top|full_adder_nbit(4)|d_ff(6)|memory<9>_out
l62 top|full_adder_nbit(4)|d_ff(6)|memory<10>_out
l63 top|full_adder_nbit(4)|d_ff(6)|memory<11>_out
l64 top|full_adder_nbit(4)|d_ff(6)|memory<12>_out
l65 top|full_adder_nbit(4)|d_ff(6)|memory<13>_out
l66 top|full_adder_nbit(4)|d_ff(6)|memory<14>_out
l67 top|full_adder_nbit(4)|d_ff(6)|memory<15>_out
l68 top|full_adder_nbit(7)|d_ff(8)|n65
l69 top|full_adder_nbit(7)|d_ff(8)|memory<0>_out
l70 top|full_adder_nbit(7)|d_ff(8)|memory<1>_out
l71 top|full_adder_nbit(7)|d_ff(8)|memory<2>_out
l72 top|full_adder_nbit(7)|d_ff(8)|memory<3>_out
l73 top|full_adder_nbit(7)|d_ff(8)|memory<4>_out
l74 top|full_adder_nbit(7)|d_ff(8)|memory<5>_out
l75 top|full_adder_nbit(7)|d_ff(8)|memory<6>_out
l76 top|full_adder_nbit(7)|d_ff(8)|memory<7>_out
l77 top|full_adder_nbit(7)|d_ff(8)|memory<8>_out
l78 top|full_adder_nbit(7)|d_ff(8)|memory<9>_out
l79 top|full_adder_nbit(7)|d_ff(8)|memory<10>_out
l80 top|full_adder_nbit(7)|d_ff(8)|memory<11>_out
l81 top|full_adder_nbit(7)|d_ff(8)|memory<12>_out
l82 top|full_adder_nbit(7)|d_ff(8)|memory<13>_out
l83 top|full_adder_nbit(7)|d_ff(8)|memory<14>_out
l84 top|full_adder_nbit(7)|d_ff(8)|memory<15>_out
l85 top|full_adder_nbit(7)|d_ff(9)|n65
l86 top|full_adder_nbit(7)|d_ff(9)|memory<0>_out
l87 top|full_adder_nbit(7)|d_ff(9)|memory<1>_out
l88 top|full_adder_nbit(7)|d_ff(9)|memory<2>_out
l89 top|full_adder_nbit(7)|d_ff(9)|memory<3>_out
l90 top|full_adder_nbit(7)|d_ff(9)|memory<4>_out
l91 top|full_adder_nbit(7)|d_ff(9)|memory<5>_out
l92 top|full_adder_nbit(7)|d_ff(9)|memory<6>_out
l93 top|full_adder_nbit(7)|d_ff(9)|memory<7>_out
l94 top|full_adder_nbit(7)|d_ff(9)|memory<8>_out
l95 top|full_adder_nbit(7)|d_ff(9)|memory<9>_out
l96 top|full_adder_nbit(7)|d_ff(9)|memory<10>_out
l97 top|full_adder_nbit(7)|d_ff(9)|memory<11>_out
l98 top|full_adder_nbit(7)|d_ff(9)|memory<12>_out
l99 top|full_adder_nbit(7)|d_ff(9)|memory<13>_out
l100 top|full_adder_nbit(7)|d_ff(9)|memory<14>_out
l101 top|full_adder_nbit(7)|d_ff(9)|memory<15>_out
l102 top|full_adder_nbit(10)|d_ff(11)|n65
l103 top|full_adder_nbit(10)|d_ff(11)|memory<0>_out
l104 top|full_adder_nbit(10)|d_ff(11)|memory<1>_out
l105 top|full_adder_nbit(10)|d_ff(11)|memory<2>_out
l106 top|full_adder_nbit(10)|d_ff(11)|memory<3>_out
l107 top|full_adder_nbit(10)|d_ff(11)|memory<4>_out
l108 top|full_adder_nbit(10)|d_ff(11)|memory<5>_out
l109 top|full_adder_nbit(10)|d_ff(11)|memory<6>_out
l110 top|full_adder_nbit(10)|d_ff(11)|memory<7>_out
l111 top|full_adder_nbit(10)|d_ff(11)|memory<8>_out
l112 top|full_adder_nbit(10)|d_ff(11)|memory<9>_out
l113 top|full_adder_nbit(10)|d_ff(11)|memory<10>_out
l114 top|full_adder_nbit(10)|d_ff(11)|memory<11>_out
l115 top|full_adder_nbit(10)|d_ff(11)|memory<12>_out
l116 top|full_adder_nbit(10)|d_ff(11)|memory<13>_out
l117 top|full_adder_nbit(10)|d_ff(11)|memory<14>_out
l118 top|full_adder_nbit(10)|d_ff(11)|memory<15>_out
l119 top|full_adder_nbit(10)|d_ff(12)|n65
l120 top|full_adder_nbit(10)|d_ff(12)|memory<0>_out
l121 top|full_adder_nbit(10)|d_ff(12)|memory<1>_out
l122 top|full_adder_nbit(10)|d_ff(12)|memory<2>_out
l123 top|full_adder_nbit(10)|d_ff(12)|memory<3>_out
l124 top|full_adder_nbit(10)|d_ff(12)|memory<4>_out
l125 top|full_adder_nbit(10)|d_ff(12)|memory<5>_out
l126 top|full_adder_nbit(10)|d_ff(12)|memory<6>_out
l127 top|full_adder_nbit(10)|d_ff(12)|memory<7>_out
l128 top|full_adder_nbit(10)|d_ff(12)|memory<8>_out
l129 top|full_adder_nbit(10)|d_ff(12)|memory<9>_out
l130 top|full_adder_nbit(10)|d_ff(12)|memory<10>_out
l131 top|full_adder_nbit(10)|d_ff(12)|memory<11>_out
l132 top|full_adder_nbit(10)|d_ff(12)|memory<12>_out
l133 top|full_adder_nbit(10)|d_ff(12)|memory<13>_out
l134 top|full_adder_nbit(10)|d_ff(12)|memory<14>_out
l135 top|full_adder_nbit(10)|d_ff(12)|memory<15>_out
l136 top|full_adder_nbit(13)|d_ff(14)|n65
l137 top|full_adder_nbit(13)|d_ff(14)|memory<0>_out
l138 top|full_adder_nbit(13)|d_ff(14)|memory<1>_out
l139 top|full_adder_nbit(13)|d_ff(14)|memory<2>_out
l140 top|full_adder_nbit(13)|d_ff(14)|memory<3>_out
l141 top|full_adder_nbit(13)|d_ff(14)|memory<4>_out
l142 top|full_adder_nbit(13)|d_ff(14)|memory<5>_out
l143 top|full_adder_nbit(13)|d_ff(14)|memory<6>_out
l144 top|full_adder_nbit(13)|d_ff(14)|memory<7>_out
l145 top|full_adder_nbit(13)|d_ff(14)|memory<8>_out
l146 top|full_adder_nbit(13)|d_ff(14)|memory<9>_out
l147 top|full_adder_nbit(13)|d_ff(14)|memory<10>_out
l148 top|full_adder_nbit(13)|d_ff(14)|memory<11>_out
l149 top|full_adder_nbit(13)|d_ff(14)|memory<12>_out
l150 top|full_adder_nbit(13)|d_ff(14)|memory<13>_out
l151 top|full_adder_nbit(13)|d_ff(14)|memory<14>_out
l152 top|full_adder_nbit(13)|d_ff(14)|memory<15>_out
l153 top|full_adder_nbit(13)|d_ff(15)|n65
l154 top|full_adder_nbit(13)|d_ff(15)|memory<0>_out
l155 top|full_adder_nbit(13)|d_ff(15)|memory<1>_out
l156 top|full_adder_nbit(13)|d_ff(15)|memory<2>_out
l157 top|full_adder_nbit(13)|d_ff(15)|memory<3>_out
l158 top|full_adder_nbit(13)|d_ff(15)|memory<4>_out
l159 top|full_adder_nbit(13)|d_ff(15)|memory<5>_out
l160 top|full_adder_nbit(13)|d_ff(15)|memory<6>_out
l161 top|full_adder_nbit(13)|d_ff(15)|memory<7>_out
l162 top|full_adder_nbit(13)|d_ff(15)|memory<8>_out
l163 top|full_adder_nbit(13)|d_ff(15)|memory<9>_out
l164 top|full_adder_nbit(13)|d_ff(15)|memory<10>_out
l165 top|full_adder_nbit(13)|d_ff(15)|memory<11>_out
l166 top|full_adder_nbit(13)|d_ff(15)|memory<12>_out
l167 top|full_adder_nbit(13)|d_ff(15)|memory<13>_out
l168 top|full_adder_nbit(13)|d_ff(15)|memory<14>_out
l169 top|full_adder_nbit(13)|d_ff(15)|memory<15>_out
l170 top|full_adder_nbit(16)|d_ff(17)|n65
l171 top|full_adder_nbit(16)|d_ff(17)|memory<0>_out
l172 top|full_adder_nbit(16)|d_ff(17)|memory<1>_out
l173 top|full_adder_nbit(16)|d_ff(17)|memory<2>_out
l174 top|full_adder_nbit(16)|d_ff(17)|memory<3>_out
l175 top|full_adder_nbit(16)|d_ff(17)|memory<4>_out
l176 top|full_adder_nbit(16)|d_ff(17)|memory<5>_out
l177 top|full_adder_nbit(16)|d_ff(17)|memory<6>_out
l178 top|full_adder_nbit(16)|d_ff(17)|memory<7>_out
l179 top|full_adder_nbit(16)|d_ff(17)|memory<8>_out
l180 top|full_adder_nbit(16)|d_ff(17)|memory<9>_out
l181 top|full_adder_nbit(16)|d_ff(17)|memory<10>_out
l182 top|full_adder_nbit(16)|d_ff(17)|memory<11>_out
l183 top|full_adder_nbit(16)|d_ff(17)|memory<12>_out
l184 top|full_adder_nbit(16)|d_ff(17)|memory<13>_out
l185 top|full_adder_nbit(16)|d_ff(17)|memory<14>_out
l186 top|full_adder_nbit(16)|d_ff(17)|memory<15>_out
l187 top|full_adder_nbit(16)|d_ff(18)|n65
l188 top|full_adder_nbit(16)|d_ff(18)|memory<0>_out
l189 top|full_adder_nbit(16)|d_ff(18)|memory<1>_out
l190 top|full_adder_nbit(16)|d_ff(18)|memory<2>_out
l191 top|full_adder_nbit(16)|d_ff(18)|memory<3>_out
l192 top|full_adder_nbit(16)|d_ff(18)|memory<4>_out
l193 top|full_adder_nbit(16)|d_ff(18)|memory<5>_out
l194 top|full_adder_nbit(16)|d_ff(18)|memory<6>_out
l195 top|full_adder_nbit(16)|d_ff(18)|memory<7>_out
l196 top|full_adder_nbit(16)|d_ff(18)|memory<8>_out
l197 top|full_adder_nbit(16)|d_ff(18)|memory<9>_out
l198 top|full_adder_nbit(16)|d_ff(18)|memory<10>_out
l199 top|full_adder_nbit(16)|d_ff(18)|memory<11>_out
l200 top|full_adder_nbit(16)|d_ff(18)|memory<12>_out
l201 top|full_adder_nbit(16)|d_ff(18)|memory<13>_out
l202 top|full_adder_nbit(16)|d_ff(18)|memory<14>_out
l203 top|full_adder_nbit(16)|d_ff(18)|memory<15>_out
o0 sum<0>
o1 sum<1>
o2 sum<2>
o3 sum<3>
o4 sum<4>
o5 sum<5>
o6 sum<6>
o7 sum<7>
o8 sum<8>
o9 sum<9>
o10 sum<10>
o11 sum<11>
o12 sum<12>
o13 sum<13>
o14 sum<14>
o15 sum<15>
o16 Err_out_Final
c
top 
This file was written by ABC on Sun Sep 18 21:00:47 2016
For information about AIGER format, refer to http://fmv.jku.at/aiger
The verilog file pipe_add_tmr_i16_l2.v has been converted using the following commands:
vl2mv pipe_add_tmr_i16_l2.v       # generates pipe_add_tmr_i16_l2.mv
abc -c "read_blif_mv pipe_add_tmr_i16_l2.mv; write_aiger -s pipe_add_tmr_i16_l2.aig"
pipe_add_tmr_i16_l2.v:
___________________________
// this file uses jinja templates for code generation, see http://jinja.pocoo.org
`define WORD_WIDTH 16  // the bit width of the input, adders, and output signals
`define LAYERS 2      // defines how often the adder is cascaded

module top(
    input_vector,   // the input vector, WORD_WIDTH broad
    sum,            // the final result, WORD_WIDTH broad
    clk,
    Err_out_Final   // the alarm output
    );
    
    input   clk;
    input   [`WORD_WIDTH-1:0] input_vector;
    output  [`WORD_WIDTH-1:0] sum;
    output  Err_out_Final;

    wire [`WORD_WIDTH-1:0] b_out_R1_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R1_0 = input_vector;

    wire [`WORD_WIDTH-1:0] b_out_R2_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R2_0 = input_vector;

    wire [`WORD_WIDTH-1:0] b_out_R3_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R3_0 = input_vector;

    // -- begin unrolled code --
{% for idx in range(1,`LAYERS+1) %}
    wire [`WORD_WIDTH-1:0] b_out_R1_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R1_{{ idx }};
    full_adder_nbit adder_R1_{{idx}}(clk, result_R1_{{idx - 1}}, b_out_R1_{{idx - 1}}, result_R1_{{idx}}, b_out_R1_{{idx}});

    wire [`WORD_WIDTH-1:0] b_out_R2_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R2_{{ idx }};
    full_adder_nbit adder_R2_{{idx}}(clk, result_R2_{{idx - 1}}, b_out_R2_{{idx - 1}}, result_R2_{{idx}}, b_out_R2_{{idx}});

    wire [`WORD_WIDTH-1:0] b_out_R3_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R3_{{ idx }};
    full_adder_nbit adder_R3_{{idx}}(clk, result_R3_{{idx - 1}}, b_out_R3_{{idx - 1}}, result_R3_{{idx}}, b_out_R3_{{idx}});
{% endfor %}
    // -- end unrolled code --

    tmr tmr_module(result_R1_`LAYERS, result_R2_`LAYERS, result_R3_`LAYERS, sum);

    //assign Err_out_Final = 0;


endmodule // top module


module full_adder_nbit(
    clk,
    in_a,
    in_b,
    sum,
    out_b
    );
    
    input   [`WORD_WIDTH-1:0] in_a;
    input   [`WORD_WIDTH-1:0] in_b;
    input clk;
    output [`WORD_WIDTH-1:0] sum;
    output [`WORD_WIDTH-1:0] out_b;
    
    wire [`WORD_WIDTH-1:0] res; 
    assign res = in_a + in_b;

    d_ff result(clk, res, sum);
    d_ff input_delay(clk, in_b, out_b);

endmodule // full_adder_nbit

module d_ff(clk, in, out);
    input clk;
    input  [`WORD_WIDTH-1:0] in;
    output [`WORD_WIDTH-1:0] out;

    reg [`WORD_WIDTH-1:0] memory;

    assign out = memory;

    initial begin
        memory = 1'b0;
    end

    always @(posedge clk) begin
        memory = in;
    end
endmodule // d_ff

module tmr(in_1, in_2, in_3, out);
    input  [`WORD_WIDTH-1:0] in_1;
    input  [`WORD_WIDTH-1:0] in_2;
    input  [`WORD_WIDTH-1:0] in_3;
    output [`WORD_WIDTH-1:0] out;

    assign out = (in_1 & in_2) | (in_2 & in_3) | (in_1 & in_3);
    
endmodule


