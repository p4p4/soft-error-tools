aig 2718 8 324 9 2386
1
0
799
807
815
823
831
839
847
1
2
4
6
8
10
12
14
16
1
0
799
807
815
823
831
839
847
1
2
4
6
8
10
12
14
16
1
0
799
807
815
823
831
839
847
1
2
4
6
8
10
12
14
16
1
865
901
943
985
1027
1069
1111
1153
1
856
876
910
952
994
1036
1078
1120
1
1171
1207
1249
1291
1333
1375
1417
1459
1
1162
1182
1216
1258
1300
1342
1384
1426
1
1477
1513
1555
1597
1639
1681
1723
1765
1
1468
1488
1522
1564
1606
1648
1690
1732
1
1783
1819
1861
1903
1945
1987
2029
2071
1
1774
1794
1828
1870
1912
1954
1996
2038
1
2089
2125
2167
2209
2251
2293
2335
2377
1
2080
2100
2134
2176
2218
2260
2302
2344
1
2395
2431
2473
2515
2557
2599
2641
2683
1
2386
2406
2440
2482
2524
2566
2608
2650
1
2701
2737
2779
2821
2863
2905
2947
2989
1
2692
2712
2746
2788
2830
2872
2914
2956
1
3007
3043
3085
3127
3169
3211
3253
3295
1
2998
3018
3052
3094
3136
3178
3220
3262
1
3313
3349
3391
3433
3475
3517
3559
3601
1
3304
3324
3358
3400
3442
3484
3526
3568
1
3619
3655
3697
3739
3781
3823
3865
3907
1
3610
3630
3664
3706
3748
3790
3832
3874
1
3925
3961
4003
4045
4087
4129
4171
4213
1
3916
3936
3970
4012
4054
4096
4138
4180
1
4231
4267
4309
4351
4393
4435
4477
4519
1
4222
4242
4276
4318
4360
4402
4444
4486
1
4537
4573
4615
4657
4699
4741
4783
4825
1
4528
4548
4582
4624
4666
4708
4750
4792
1
4843
4879
4921
4963
5005
5047
5089
5131
1
4834
4854
4888
4930
4972
5014
5056
5098
1
5149
5185
5227
5269
5311
5353
5395
5437
1
5140
5160
5194
5236
5278
5320
5362
5404
681
697
713
729
745
761
777
793
0
jH(xV6ÜdDîrR¢
Ä
`
∞énæú|Ã™äïòòöõû†°§¶ß™¨≠∞≤≥∂∏πªæøØ≤≥	
Õ–”¡ƒ«	Ìı·‰È&
.		ï	òüâ	åì#%		Ω¿
…±¥
Ω#%		ÂËÛŸ‹Á#%		çêùÅÑë#%		µ∏«©¨ª#%		…ÃÕΩ¿¡	
€ﬁ·œ“’	˚˛É	ÔÚ˜&
.		£		¶	≠	ó		ö	°	#%		À	Œ	
◊	ø	¬	
À	#%		Û	ˆ	Å
Á	Í	ı	#%		õ
û
´
è
í
ü
#%		√
∆
’
∑
∫
…
#%		◊
⁄
€
À
Œ
œ
	
È
Ï
Ô
›
‡
„
	âåë˝
ÄÖ&
.		±	¥ª•	®Ø#%		Ÿ‹
ÂÕ–
Ÿ#%		ÅÑèı¯É#%		©¨πù†≠#%		—‘„≈»◊#%		ÂËÈŸ‹›	
˜˙˝ÎÓÒ	óöüãéì&
.		ø	¬…≥	∂Ω#%		ÁÍ
Û€ﬁ
Á#%		èíùÉÜë#%		∑∫«´Æª#%		ﬂ‚Ò”÷Â#%		Ûˆ˜ÁÍÎ	
Öàã˘¸ˇ	•®≠ôú°&
.		Õ	–◊¡	ƒÀ#%		ı¯
ÅÈÏ
ı#%		ù†´ëîü#%		≈»’πº…#%		Ìˇ·‰Û#%		ÅÑÖı¯˘	
ìñôáäç	≥∂ªß™Ø&
.		€	ﬁÂœ	“Ÿ#%		ÉÜ
è˜˙
É#%		´Æπü¢≠#%		”÷„« ◊#%		˚˛çÔÚÅ#%		èíìÉÜá	
°§ßïòõ	¡ƒ…µ∏Ω&
.		È	ÏÛ›	‡Á#%		ëî
ùÖà
ë#%		πº«≠∞ª#%		·‰Ò’ÿÂ#%		âåõ˝Äè#%		ù†°ëîï	
Ø≤µ£¶©	œ“◊√∆À&
.		˜	˙ÅÎ	Óı#%		ü¢
´ìñ
ü#%		« ’ªæ…#%		ÔÚˇ„ÊÛ#%		óö©ãéù#%		´ÆØü¢£	
Ω¿√±¥∑	›‡Â—‘Ÿ&
.		Ö	àè˘	¸É#%		≠∞
π°§
≠#%		’ÿ„…Ã◊#%		˝ÄçÒÙÅ#%		•®∑ôú´#%		πºΩ≠∞±	
ÀŒ—ø¬≈	ÎÓÛﬂ‚Á&
.		ì	ñùá	äë#%		ªæ
«Ø≤
ª#%		„ÊÒ◊⁄Â#%		ãéõˇÇè#%		≥∂≈ß™π#%		« Àªæø	
Ÿ‹ﬂÕ–”	˘¸ÅÌı&
.		°	§´ï	òü#%		…Ã
’Ω¿
…#%		ÒÙˇÂËÛ#%		ôú©çêù#%		¡ƒ”µ∏«#%		’ÿŸ…ÃÕ	
ÁÍÌ€ﬁ·	áäè˚˛É&
.		Ø	≤π£	¶≠#%		◊⁄
„ÀŒ
◊#%		ˇÇçÛˆÅ#%		ß™∑õû´#%		œ“·√∆’#%		„ÊÁ◊⁄€	
ı¯˚ÈÏÔ	ï ò ù â å ë &
.		Ω 	¿ « ± 	¥ ª #%		Â Ë 
Ò Ÿ ‹ 
Â #%		ç!ê!õ!Å!Ñ!è!#%		µ!∏!≈!©!¨!π!#%		›!‡!Ô!—!‘!„!#%		Ò!Ù!ı!Â!Ë!È!	
É"Ü"â"˜!˙!˝!	£"¶"´"ó"ö"ü"&
.		À"	Œ"’"ø"	¬"…"#%		Û"ˆ"
ˇ"Á"Í"
Û"#%		õ#û#©#è#í#ù##%		√#∆#”#∑#∫#«##%		Î#Ó#˝#ﬂ#‚#Ò##%		ˇ#Ç$É$Û#ˆ#˜#	
ë$î$ó$Ö$à$ã$	±$¥$π$•$®$≠$&
.		Ÿ$	‹$„$Õ$	–$◊$#%		Å%Ñ%
ç%ı$¯$
Å%#%		©%¨%∑%ù%†%´%#%		—%‘%·%≈%»%’%#%		˘%¸%ã&Ì%%ˇ%#%		i0 input_vector<0>
i1 input_vector<1>
i2 input_vector<2>
i3 input_vector<3>
i4 input_vector<4>
i5 input_vector<5>
i6 input_vector<6>
i7 input_vector<7>
l0 top|full_adder_nbit(1)|d_ff(2)|n33
l1 top|full_adder_nbit(1)|d_ff(2)|memory<0>_out
l2 top|full_adder_nbit(1)|d_ff(2)|memory<1>_out
l3 top|full_adder_nbit(1)|d_ff(2)|memory<2>_out
l4 top|full_adder_nbit(1)|d_ff(2)|memory<3>_out
l5 top|full_adder_nbit(1)|d_ff(2)|memory<4>_out
l6 top|full_adder_nbit(1)|d_ff(2)|memory<5>_out
l7 top|full_adder_nbit(1)|d_ff(2)|memory<6>_out
l8 top|full_adder_nbit(1)|d_ff(2)|memory<7>_out
l9 top|full_adder_nbit(1)|d_ff(3)|n33
l10 top|full_adder_nbit(1)|d_ff(3)|memory<0>_out
l11 top|full_adder_nbit(1)|d_ff(3)|memory<1>_out
l12 top|full_adder_nbit(1)|d_ff(3)|memory<2>_out
l13 top|full_adder_nbit(1)|d_ff(3)|memory<3>_out
l14 top|full_adder_nbit(1)|d_ff(3)|memory<4>_out
l15 top|full_adder_nbit(1)|d_ff(3)|memory<5>_out
l16 top|full_adder_nbit(1)|d_ff(3)|memory<6>_out
l17 top|full_adder_nbit(1)|d_ff(3)|memory<7>_out
l18 top|full_adder_nbit(4)|d_ff(5)|n33
l19 top|full_adder_nbit(4)|d_ff(5)|memory<0>_out
l20 top|full_adder_nbit(4)|d_ff(5)|memory<1>_out
l21 top|full_adder_nbit(4)|d_ff(5)|memory<2>_out
l22 top|full_adder_nbit(4)|d_ff(5)|memory<3>_out
l23 top|full_adder_nbit(4)|d_ff(5)|memory<4>_out
l24 top|full_adder_nbit(4)|d_ff(5)|memory<5>_out
l25 top|full_adder_nbit(4)|d_ff(5)|memory<6>_out
l26 top|full_adder_nbit(4)|d_ff(5)|memory<7>_out
l27 top|full_adder_nbit(4)|d_ff(6)|n33
l28 top|full_adder_nbit(4)|d_ff(6)|memory<0>_out
l29 top|full_adder_nbit(4)|d_ff(6)|memory<1>_out
l30 top|full_adder_nbit(4)|d_ff(6)|memory<2>_out
l31 top|full_adder_nbit(4)|d_ff(6)|memory<3>_out
l32 top|full_adder_nbit(4)|d_ff(6)|memory<4>_out
l33 top|full_adder_nbit(4)|d_ff(6)|memory<5>_out
l34 top|full_adder_nbit(4)|d_ff(6)|memory<6>_out
l35 top|full_adder_nbit(4)|d_ff(6)|memory<7>_out
l36 top|full_adder_nbit(7)|d_ff(8)|n33
l37 top|full_adder_nbit(7)|d_ff(8)|memory<0>_out
l38 top|full_adder_nbit(7)|d_ff(8)|memory<1>_out
l39 top|full_adder_nbit(7)|d_ff(8)|memory<2>_out
l40 top|full_adder_nbit(7)|d_ff(8)|memory<3>_out
l41 top|full_adder_nbit(7)|d_ff(8)|memory<4>_out
l42 top|full_adder_nbit(7)|d_ff(8)|memory<5>_out
l43 top|full_adder_nbit(7)|d_ff(8)|memory<6>_out
l44 top|full_adder_nbit(7)|d_ff(8)|memory<7>_out
l45 top|full_adder_nbit(7)|d_ff(9)|n33
l46 top|full_adder_nbit(7)|d_ff(9)|memory<0>_out
l47 top|full_adder_nbit(7)|d_ff(9)|memory<1>_out
l48 top|full_adder_nbit(7)|d_ff(9)|memory<2>_out
l49 top|full_adder_nbit(7)|d_ff(9)|memory<3>_out
l50 top|full_adder_nbit(7)|d_ff(9)|memory<4>_out
l51 top|full_adder_nbit(7)|d_ff(9)|memory<5>_out
l52 top|full_adder_nbit(7)|d_ff(9)|memory<6>_out
l53 top|full_adder_nbit(7)|d_ff(9)|memory<7>_out
l54 top|full_adder_nbit(10)|d_ff(11)|n33
l55 top|full_adder_nbit(10)|d_ff(11)|memory<0>_out
l56 top|full_adder_nbit(10)|d_ff(11)|memory<1>_out
l57 top|full_adder_nbit(10)|d_ff(11)|memory<2>_out
l58 top|full_adder_nbit(10)|d_ff(11)|memory<3>_out
l59 top|full_adder_nbit(10)|d_ff(11)|memory<4>_out
l60 top|full_adder_nbit(10)|d_ff(11)|memory<5>_out
l61 top|full_adder_nbit(10)|d_ff(11)|memory<6>_out
l62 top|full_adder_nbit(10)|d_ff(11)|memory<7>_out
l63 top|full_adder_nbit(10)|d_ff(12)|n33
l64 top|full_adder_nbit(10)|d_ff(12)|memory<0>_out
l65 top|full_adder_nbit(10)|d_ff(12)|memory<1>_out
l66 top|full_adder_nbit(10)|d_ff(12)|memory<2>_out
l67 top|full_adder_nbit(10)|d_ff(12)|memory<3>_out
l68 top|full_adder_nbit(10)|d_ff(12)|memory<4>_out
l69 top|full_adder_nbit(10)|d_ff(12)|memory<5>_out
l70 top|full_adder_nbit(10)|d_ff(12)|memory<6>_out
l71 top|full_adder_nbit(10)|d_ff(12)|memory<7>_out
l72 top|full_adder_nbit(13)|d_ff(14)|n33
l73 top|full_adder_nbit(13)|d_ff(14)|memory<0>_out
l74 top|full_adder_nbit(13)|d_ff(14)|memory<1>_out
l75 top|full_adder_nbit(13)|d_ff(14)|memory<2>_out
l76 top|full_adder_nbit(13)|d_ff(14)|memory<3>_out
l77 top|full_adder_nbit(13)|d_ff(14)|memory<4>_out
l78 top|full_adder_nbit(13)|d_ff(14)|memory<5>_out
l79 top|full_adder_nbit(13)|d_ff(14)|memory<6>_out
l80 top|full_adder_nbit(13)|d_ff(14)|memory<7>_out
l81 top|full_adder_nbit(13)|d_ff(15)|n33
l82 top|full_adder_nbit(13)|d_ff(15)|memory<0>_out
l83 top|full_adder_nbit(13)|d_ff(15)|memory<1>_out
l84 top|full_adder_nbit(13)|d_ff(15)|memory<2>_out
l85 top|full_adder_nbit(13)|d_ff(15)|memory<3>_out
l86 top|full_adder_nbit(13)|d_ff(15)|memory<4>_out
l87 top|full_adder_nbit(13)|d_ff(15)|memory<5>_out
l88 top|full_adder_nbit(13)|d_ff(15)|memory<6>_out
l89 top|full_adder_nbit(13)|d_ff(15)|memory<7>_out
l90 top|full_adder_nbit(16)|d_ff(17)|n33
l91 top|full_adder_nbit(16)|d_ff(17)|memory<0>_out
l92 top|full_adder_nbit(16)|d_ff(17)|memory<1>_out
l93 top|full_adder_nbit(16)|d_ff(17)|memory<2>_out
l94 top|full_adder_nbit(16)|d_ff(17)|memory<3>_out
l95 top|full_adder_nbit(16)|d_ff(17)|memory<4>_out
l96 top|full_adder_nbit(16)|d_ff(17)|memory<5>_out
l97 top|full_adder_nbit(16)|d_ff(17)|memory<6>_out
l98 top|full_adder_nbit(16)|d_ff(17)|memory<7>_out
l99 top|full_adder_nbit(16)|d_ff(18)|n33
l100 top|full_adder_nbit(16)|d_ff(18)|memory<0>_out
l101 top|full_adder_nbit(16)|d_ff(18)|memory<1>_out
l102 top|full_adder_nbit(16)|d_ff(18)|memory<2>_out
l103 top|full_adder_nbit(16)|d_ff(18)|memory<3>_out
l104 top|full_adder_nbit(16)|d_ff(18)|memory<4>_out
l105 top|full_adder_nbit(16)|d_ff(18)|memory<5>_out
l106 top|full_adder_nbit(16)|d_ff(18)|memory<6>_out
l107 top|full_adder_nbit(16)|d_ff(18)|memory<7>_out
l108 top|full_adder_nbit(19)|d_ff(20)|n33
l109 top|full_adder_nbit(19)|d_ff(20)|memory<0>_out
l110 top|full_adder_nbit(19)|d_ff(20)|memory<1>_out
l111 top|full_adder_nbit(19)|d_ff(20)|memory<2>_out
l112 top|full_adder_nbit(19)|d_ff(20)|memory<3>_out
l113 top|full_adder_nbit(19)|d_ff(20)|memory<4>_out
l114 top|full_adder_nbit(19)|d_ff(20)|memory<5>_out
l115 top|full_adder_nbit(19)|d_ff(20)|memory<6>_out
l116 top|full_adder_nbit(19)|d_ff(20)|memory<7>_out
l117 top|full_adder_nbit(19)|d_ff(21)|n33
l118 top|full_adder_nbit(19)|d_ff(21)|memory<0>_out
l119 top|full_adder_nbit(19)|d_ff(21)|memory<1>_out
l120 top|full_adder_nbit(19)|d_ff(21)|memory<2>_out
l121 top|full_adder_nbit(19)|d_ff(21)|memory<3>_out
l122 top|full_adder_nbit(19)|d_ff(21)|memory<4>_out
l123 top|full_adder_nbit(19)|d_ff(21)|memory<5>_out
l124 top|full_adder_nbit(19)|d_ff(21)|memory<6>_out
l125 top|full_adder_nbit(19)|d_ff(21)|memory<7>_out
l126 top|full_adder_nbit(22)|d_ff(23)|n33
l127 top|full_adder_nbit(22)|d_ff(23)|memory<0>_out
l128 top|full_adder_nbit(22)|d_ff(23)|memory<1>_out
l129 top|full_adder_nbit(22)|d_ff(23)|memory<2>_out
l130 top|full_adder_nbit(22)|d_ff(23)|memory<3>_out
l131 top|full_adder_nbit(22)|d_ff(23)|memory<4>_out
l132 top|full_adder_nbit(22)|d_ff(23)|memory<5>_out
l133 top|full_adder_nbit(22)|d_ff(23)|memory<6>_out
l134 top|full_adder_nbit(22)|d_ff(23)|memory<7>_out
l135 top|full_adder_nbit(22)|d_ff(24)|n33
l136 top|full_adder_nbit(22)|d_ff(24)|memory<0>_out
l137 top|full_adder_nbit(22)|d_ff(24)|memory<1>_out
l138 top|full_adder_nbit(22)|d_ff(24)|memory<2>_out
l139 top|full_adder_nbit(22)|d_ff(24)|memory<3>_out
l140 top|full_adder_nbit(22)|d_ff(24)|memory<4>_out
l141 top|full_adder_nbit(22)|d_ff(24)|memory<5>_out
l142 top|full_adder_nbit(22)|d_ff(24)|memory<6>_out
l143 top|full_adder_nbit(22)|d_ff(24)|memory<7>_out
l144 top|full_adder_nbit(25)|d_ff(26)|n33
l145 top|full_adder_nbit(25)|d_ff(26)|memory<0>_out
l146 top|full_adder_nbit(25)|d_ff(26)|memory<1>_out
l147 top|full_adder_nbit(25)|d_ff(26)|memory<2>_out
l148 top|full_adder_nbit(25)|d_ff(26)|memory<3>_out
l149 top|full_adder_nbit(25)|d_ff(26)|memory<4>_out
l150 top|full_adder_nbit(25)|d_ff(26)|memory<5>_out
l151 top|full_adder_nbit(25)|d_ff(26)|memory<6>_out
l152 top|full_adder_nbit(25)|d_ff(26)|memory<7>_out
l153 top|full_adder_nbit(25)|d_ff(27)|n33
l154 top|full_adder_nbit(25)|d_ff(27)|memory<0>_out
l155 top|full_adder_nbit(25)|d_ff(27)|memory<1>_out
l156 top|full_adder_nbit(25)|d_ff(27)|memory<2>_out
l157 top|full_adder_nbit(25)|d_ff(27)|memory<3>_out
l158 top|full_adder_nbit(25)|d_ff(27)|memory<4>_out
l159 top|full_adder_nbit(25)|d_ff(27)|memory<5>_out
l160 top|full_adder_nbit(25)|d_ff(27)|memory<6>_out
l161 top|full_adder_nbit(25)|d_ff(27)|memory<7>_out
l162 top|full_adder_nbit(28)|d_ff(29)|n33
l163 top|full_adder_nbit(28)|d_ff(29)|memory<0>_out
l164 top|full_adder_nbit(28)|d_ff(29)|memory<1>_out
l165 top|full_adder_nbit(28)|d_ff(29)|memory<2>_out
l166 top|full_adder_nbit(28)|d_ff(29)|memory<3>_out
l167 top|full_adder_nbit(28)|d_ff(29)|memory<4>_out
l168 top|full_adder_nbit(28)|d_ff(29)|memory<5>_out
l169 top|full_adder_nbit(28)|d_ff(29)|memory<6>_out
l170 top|full_adder_nbit(28)|d_ff(29)|memory<7>_out
l171 top|full_adder_nbit(28)|d_ff(30)|n33
l172 top|full_adder_nbit(28)|d_ff(30)|memory<0>_out
l173 top|full_adder_nbit(28)|d_ff(30)|memory<1>_out
l174 top|full_adder_nbit(28)|d_ff(30)|memory<2>_out
l175 top|full_adder_nbit(28)|d_ff(30)|memory<3>_out
l176 top|full_adder_nbit(28)|d_ff(30)|memory<4>_out
l177 top|full_adder_nbit(28)|d_ff(30)|memory<5>_out
l178 top|full_adder_nbit(28)|d_ff(30)|memory<6>_out
l179 top|full_adder_nbit(28)|d_ff(30)|memory<7>_out
l180 top|full_adder_nbit(31)|d_ff(32)|n33
l181 top|full_adder_nbit(31)|d_ff(32)|memory<0>_out
l182 top|full_adder_nbit(31)|d_ff(32)|memory<1>_out
l183 top|full_adder_nbit(31)|d_ff(32)|memory<2>_out
l184 top|full_adder_nbit(31)|d_ff(32)|memory<3>_out
l185 top|full_adder_nbit(31)|d_ff(32)|memory<4>_out
l186 top|full_adder_nbit(31)|d_ff(32)|memory<5>_out
l187 top|full_adder_nbit(31)|d_ff(32)|memory<6>_out
l188 top|full_adder_nbit(31)|d_ff(32)|memory<7>_out
l189 top|full_adder_nbit(31)|d_ff(33)|n33
l190 top|full_adder_nbit(31)|d_ff(33)|memory<0>_out
l191 top|full_adder_nbit(31)|d_ff(33)|memory<1>_out
l192 top|full_adder_nbit(31)|d_ff(33)|memory<2>_out
l193 top|full_adder_nbit(31)|d_ff(33)|memory<3>_out
l194 top|full_adder_nbit(31)|d_ff(33)|memory<4>_out
l195 top|full_adder_nbit(31)|d_ff(33)|memory<5>_out
l196 top|full_adder_nbit(31)|d_ff(33)|memory<6>_out
l197 top|full_adder_nbit(31)|d_ff(33)|memory<7>_out
l198 top|full_adder_nbit(34)|d_ff(35)|n33
l199 top|full_adder_nbit(34)|d_ff(35)|memory<0>_out
l200 top|full_adder_nbit(34)|d_ff(35)|memory<1>_out
l201 top|full_adder_nbit(34)|d_ff(35)|memory<2>_out
l202 top|full_adder_nbit(34)|d_ff(35)|memory<3>_out
l203 top|full_adder_nbit(34)|d_ff(35)|memory<4>_out
l204 top|full_adder_nbit(34)|d_ff(35)|memory<5>_out
l205 top|full_adder_nbit(34)|d_ff(35)|memory<6>_out
l206 top|full_adder_nbit(34)|d_ff(35)|memory<7>_out
l207 top|full_adder_nbit(34)|d_ff(36)|n33
l208 top|full_adder_nbit(34)|d_ff(36)|memory<0>_out
l209 top|full_adder_nbit(34)|d_ff(36)|memory<1>_out
l210 top|full_adder_nbit(34)|d_ff(36)|memory<2>_out
l211 top|full_adder_nbit(34)|d_ff(36)|memory<3>_out
l212 top|full_adder_nbit(34)|d_ff(36)|memory<4>_out
l213 top|full_adder_nbit(34)|d_ff(36)|memory<5>_out
l214 top|full_adder_nbit(34)|d_ff(36)|memory<6>_out
l215 top|full_adder_nbit(34)|d_ff(36)|memory<7>_out
l216 top|full_adder_nbit(37)|d_ff(38)|n33
l217 top|full_adder_nbit(37)|d_ff(38)|memory<0>_out
l218 top|full_adder_nbit(37)|d_ff(38)|memory<1>_out
l219 top|full_adder_nbit(37)|d_ff(38)|memory<2>_out
l220 top|full_adder_nbit(37)|d_ff(38)|memory<3>_out
l221 top|full_adder_nbit(37)|d_ff(38)|memory<4>_out
l222 top|full_adder_nbit(37)|d_ff(38)|memory<5>_out
l223 top|full_adder_nbit(37)|d_ff(38)|memory<6>_out
l224 top|full_adder_nbit(37)|d_ff(38)|memory<7>_out
l225 top|full_adder_nbit(37)|d_ff(39)|n33
l226 top|full_adder_nbit(37)|d_ff(39)|memory<0>_out
l227 top|full_adder_nbit(37)|d_ff(39)|memory<1>_out
l228 top|full_adder_nbit(37)|d_ff(39)|memory<2>_out
l229 top|full_adder_nbit(37)|d_ff(39)|memory<3>_out
l230 top|full_adder_nbit(37)|d_ff(39)|memory<4>_out
l231 top|full_adder_nbit(37)|d_ff(39)|memory<5>_out
l232 top|full_adder_nbit(37)|d_ff(39)|memory<6>_out
l233 top|full_adder_nbit(37)|d_ff(39)|memory<7>_out
l234 top|full_adder_nbit(40)|d_ff(41)|n33
l235 top|full_adder_nbit(40)|d_ff(41)|memory<0>_out
l236 top|full_adder_nbit(40)|d_ff(41)|memory<1>_out
l237 top|full_adder_nbit(40)|d_ff(41)|memory<2>_out
l238 top|full_adder_nbit(40)|d_ff(41)|memory<3>_out
l239 top|full_adder_nbit(40)|d_ff(41)|memory<4>_out
l240 top|full_adder_nbit(40)|d_ff(41)|memory<5>_out
l241 top|full_adder_nbit(40)|d_ff(41)|memory<6>_out
l242 top|full_adder_nbit(40)|d_ff(41)|memory<7>_out
l243 top|full_adder_nbit(40)|d_ff(42)|n33
l244 top|full_adder_nbit(40)|d_ff(42)|memory<0>_out
l245 top|full_adder_nbit(40)|d_ff(42)|memory<1>_out
l246 top|full_adder_nbit(40)|d_ff(42)|memory<2>_out
l247 top|full_adder_nbit(40)|d_ff(42)|memory<3>_out
l248 top|full_adder_nbit(40)|d_ff(42)|memory<4>_out
l249 top|full_adder_nbit(40)|d_ff(42)|memory<5>_out
l250 top|full_adder_nbit(40)|d_ff(42)|memory<6>_out
l251 top|full_adder_nbit(40)|d_ff(42)|memory<7>_out
l252 top|full_adder_nbit(43)|d_ff(44)|n33
l253 top|full_adder_nbit(43)|d_ff(44)|memory<0>_out
l254 top|full_adder_nbit(43)|d_ff(44)|memory<1>_out
l255 top|full_adder_nbit(43)|d_ff(44)|memory<2>_out
l256 top|full_adder_nbit(43)|d_ff(44)|memory<3>_out
l257 top|full_adder_nbit(43)|d_ff(44)|memory<4>_out
l258 top|full_adder_nbit(43)|d_ff(44)|memory<5>_out
l259 top|full_adder_nbit(43)|d_ff(44)|memory<6>_out
l260 top|full_adder_nbit(43)|d_ff(44)|memory<7>_out
l261 top|full_adder_nbit(43)|d_ff(45)|n33
l262 top|full_adder_nbit(43)|d_ff(45)|memory<0>_out
l263 top|full_adder_nbit(43)|d_ff(45)|memory<1>_out
l264 top|full_adder_nbit(43)|d_ff(45)|memory<2>_out
l265 top|full_adder_nbit(43)|d_ff(45)|memory<3>_out
l266 top|full_adder_nbit(43)|d_ff(45)|memory<4>_out
l267 top|full_adder_nbit(43)|d_ff(45)|memory<5>_out
l268 top|full_adder_nbit(43)|d_ff(45)|memory<6>_out
l269 top|full_adder_nbit(43)|d_ff(45)|memory<7>_out
l270 top|full_adder_nbit(46)|d_ff(47)|n33
l271 top|full_adder_nbit(46)|d_ff(47)|memory<0>_out
l272 top|full_adder_nbit(46)|d_ff(47)|memory<1>_out
l273 top|full_adder_nbit(46)|d_ff(47)|memory<2>_out
l274 top|full_adder_nbit(46)|d_ff(47)|memory<3>_out
l275 top|full_adder_nbit(46)|d_ff(47)|memory<4>_out
l276 top|full_adder_nbit(46)|d_ff(47)|memory<5>_out
l277 top|full_adder_nbit(46)|d_ff(47)|memory<6>_out
l278 top|full_adder_nbit(46)|d_ff(47)|memory<7>_out
l279 top|full_adder_nbit(46)|d_ff(48)|n33
l280 top|full_adder_nbit(46)|d_ff(48)|memory<0>_out
l281 top|full_adder_nbit(46)|d_ff(48)|memory<1>_out
l282 top|full_adder_nbit(46)|d_ff(48)|memory<2>_out
l283 top|full_adder_nbit(46)|d_ff(48)|memory<3>_out
l284 top|full_adder_nbit(46)|d_ff(48)|memory<4>_out
l285 top|full_adder_nbit(46)|d_ff(48)|memory<5>_out
l286 top|full_adder_nbit(46)|d_ff(48)|memory<6>_out
l287 top|full_adder_nbit(46)|d_ff(48)|memory<7>_out
l288 top|full_adder_nbit(49)|d_ff(50)|n33
l289 top|full_adder_nbit(49)|d_ff(50)|memory<0>_out
l290 top|full_adder_nbit(49)|d_ff(50)|memory<1>_out
l291 top|full_adder_nbit(49)|d_ff(50)|memory<2>_out
l292 top|full_adder_nbit(49)|d_ff(50)|memory<3>_out
l293 top|full_adder_nbit(49)|d_ff(50)|memory<4>_out
l294 top|full_adder_nbit(49)|d_ff(50)|memory<5>_out
l295 top|full_adder_nbit(49)|d_ff(50)|memory<6>_out
l296 top|full_adder_nbit(49)|d_ff(50)|memory<7>_out
l297 top|full_adder_nbit(49)|d_ff(51)|n33
l298 top|full_adder_nbit(49)|d_ff(51)|memory<0>_out
l299 top|full_adder_nbit(49)|d_ff(51)|memory<1>_out
l300 top|full_adder_nbit(49)|d_ff(51)|memory<2>_out
l301 top|full_adder_nbit(49)|d_ff(51)|memory<3>_out
l302 top|full_adder_nbit(49)|d_ff(51)|memory<4>_out
l303 top|full_adder_nbit(49)|d_ff(51)|memory<5>_out
l304 top|full_adder_nbit(49)|d_ff(51)|memory<6>_out
l305 top|full_adder_nbit(49)|d_ff(51)|memory<7>_out
l306 top|full_adder_nbit(52)|d_ff(53)|n33
l307 top|full_adder_nbit(52)|d_ff(53)|memory<0>_out
l308 top|full_adder_nbit(52)|d_ff(53)|memory<1>_out
l309 top|full_adder_nbit(52)|d_ff(53)|memory<2>_out
l310 top|full_adder_nbit(52)|d_ff(53)|memory<3>_out
l311 top|full_adder_nbit(52)|d_ff(53)|memory<4>_out
l312 top|full_adder_nbit(52)|d_ff(53)|memory<5>_out
l313 top|full_adder_nbit(52)|d_ff(53)|memory<6>_out
l314 top|full_adder_nbit(52)|d_ff(53)|memory<7>_out
l315 top|full_adder_nbit(52)|d_ff(54)|n33
l316 top|full_adder_nbit(52)|d_ff(54)|memory<0>_out
l317 top|full_adder_nbit(52)|d_ff(54)|memory<1>_out
l318 top|full_adder_nbit(52)|d_ff(54)|memory<2>_out
l319 top|full_adder_nbit(52)|d_ff(54)|memory<3>_out
l320 top|full_adder_nbit(52)|d_ff(54)|memory<4>_out
l321 top|full_adder_nbit(52)|d_ff(54)|memory<5>_out
l322 top|full_adder_nbit(52)|d_ff(54)|memory<6>_out
l323 top|full_adder_nbit(52)|d_ff(54)|memory<7>_out
o0 sum<0>
o1 sum<1>
o2 sum<2>
o3 sum<3>
o4 sum<4>
o5 sum<5>
o6 sum<6>
o7 sum<7>
o8 Err_out_Final
c
top 
This file was written by ABC on Sun Sep 18 21:00:47 2016
For information about AIGER format, refer to http://fmv.jku.at/aiger
The verilog file pipe_add_tmr_i8_l6.v has been converted using the following commands:
vl2mv pipe_add_tmr_i8_l6.v       # generates pipe_add_tmr_i8_l6.mv
abc -c "read_blif_mv pipe_add_tmr_i8_l6.mv; write_aiger -s pipe_add_tmr_i8_l6.aig"
pipe_add_tmr_i8_l6.v:
___________________________
// this file uses jinja templates for code generation, see http://jinja.pocoo.org
`define WORD_WIDTH 8  // the bit width of the input, adders, and output signals
`define LAYERS 6      // defines how often the adder is cascaded

module top(
    input_vector,   // the input vector, WORD_WIDTH broad
    sum,            // the final result, WORD_WIDTH broad
    clk,
    Err_out_Final   // the alarm output
    );
    
    input   clk;
    input   [`WORD_WIDTH-1:0] input_vector;
    output  [`WORD_WIDTH-1:0] sum;
    output  Err_out_Final;

    wire [`WORD_WIDTH-1:0] b_out_R1_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R1_0 = input_vector;

    wire [`WORD_WIDTH-1:0] b_out_R2_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R2_0 = input_vector;

    wire [`WORD_WIDTH-1:0] b_out_R3_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R3_0 = input_vector;

    // -- begin unrolled code --
{% for idx in range(1,`LAYERS+1) %}
    wire [`WORD_WIDTH-1:0] b_out_R1_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R1_{{ idx }};
    full_adder_nbit adder_R1_{{idx}}(clk, result_R1_{{idx - 1}}, b_out_R1_{{idx - 1}}, result_R1_{{idx}}, b_out_R1_{{idx}});

    wire [`WORD_WIDTH-1:0] b_out_R2_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R2_{{ idx }};
    full_adder_nbit adder_R2_{{idx}}(clk, result_R2_{{idx - 1}}, b_out_R2_{{idx - 1}}, result_R2_{{idx}}, b_out_R2_{{idx}});

    wire [`WORD_WIDTH-1:0] b_out_R3_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R3_{{ idx }};
    full_adder_nbit adder_R3_{{idx}}(clk, result_R3_{{idx - 1}}, b_out_R3_{{idx - 1}}, result_R3_{{idx}}, b_out_R3_{{idx}});
{% endfor %}
    // -- end unrolled code --

    tmr tmr_module(result_R1_`LAYERS, result_R2_`LAYERS, result_R3_`LAYERS, sum);

    //assign Err_out_Final = 0;


endmodule // top module


module full_adder_nbit(
    clk,
    in_a,
    in_b,
    sum,
    out_b
    );
    
    input   [`WORD_WIDTH-1:0] in_a;
    input   [`WORD_WIDTH-1:0] in_b;
    input clk;
    output [`WORD_WIDTH-1:0] sum;
    output [`WORD_WIDTH-1:0] out_b;
    
    wire [`WORD_WIDTH-1:0] res; 
    assign res = in_a + in_b;

    d_ff result(clk, res, sum);
    d_ff input_delay(clk, in_b, out_b);

endmodule // full_adder_nbit

module d_ff(clk, in, out);
    input clk;
    input  [`WORD_WIDTH-1:0] in;
    output [`WORD_WIDTH-1:0] out;

    reg [`WORD_WIDTH-1:0] memory;

    assign out = memory;

    initial begin
        memory = 1'b0;
    end

    always @(posedge clk) begin
        memory = in;
    end
endmodule // d_ff

module tmr(in_1, in_2, in_3, out);
    input  [`WORD_WIDTH-1:0] in_1;
    input  [`WORD_WIDTH-1:0] in_2;
    input  [`WORD_WIDTH-1:0] in_3;
    output [`WORD_WIDTH-1:0] out;

    assign out = (in_1 & in_2) | (in_2 & in_3) | (in_1 & in_3);
    
endmodule


