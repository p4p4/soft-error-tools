aig 1217 64 390 65 763
1
0
1939
1947
1955
1963
1971
1979
1987
1995
2003
2011
2019
2027
2035
2043
2051
2059
2067
2075
2083
2091
2099
2107
2115
2123
2131
2139
2147
2155
2163
2171
2179
2187
2195
2203
2211
2219
2227
2235
2243
2251
2259
2267
2275
2283
2291
2299
2307
2315
2323
2331
2339
2347
2355
2363
2371
2379
2387
2395
2403
2411
2419
2427
2435
1
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110
112
114
116
118
120
122
124
126
128
1
0
1939
1947
1955
1963
1971
1979
1987
1995
2003
2011
2019
2027
2035
2043
2051
2059
2067
2075
2083
2091
2099
2107
2115
2123
2131
2139
2147
2155
2163
2171
2179
2187
2195
2203
2211
2219
2227
2235
2243
2251
2259
2267
2275
2283
2291
2299
2307
2315
2323
2331
2339
2347
2355
2363
2371
2379
2387
2395
2403
2411
2419
2427
2435
1
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110
112
114
116
118
120
122
124
126
128
1
0
1939
1947
1955
1963
1971
1979
1987
1995
2003
2011
2019
2027
2035
2043
2051
2059
2067
2075
2083
2091
2099
2107
2115
2123
2131
2139
2147
2155
2163
2171
2179
2187
2195
2203
2211
2219
2227
2235
2243
2251
2259
2267
2275
2283
2291
2299
2307
2315
2323
2331
2339
2347
2355
2363
2371
2379
2387
2395
2403
2411
2419
2427
2435
1
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
102
104
106
108
110
112
114
116
118
120
122
124
126
128
925
941
957
973
989
1005
1021
1037
1053
1069
1085
1101
1117
1133
1149
1165
1181
1197
1213
1229
1245
1261
1277
1293
1309
1325
1341
1357
1373
1389
1405
1421
1437
1453
1469
1485
1501
1517
1533
1549
1565
1581
1597
1613
1629
1645
1661
1677
1693
1709
1725
1741
1757
1773
1789
1805
1821
1837
1853
1869
1885
1901
1917
1933
0
äààòññ¶§§¥≤≤¬
¿
¿
–ŒŒﬁ‹‹ÏÍÍ˙¯¯àÜÜñîî§¢¢≤∞∞¿ææŒÃÃ‹ ⁄ ⁄ Í"Ë"Ë"¯$ˆ$ˆ$Ü&Ñ&Ñ&î(í(í(¢*†*†*∞,Æ,Æ,æ.º.º.Ã0 0 0⁄2ÿ2ÿ2Ë4Ê4Ê4ˆ6Ù6Ù6Ñ	8Ç8Ç8í	:ê:ê:†	<û<û<Æ	>¨>¨>º	@∫@∫@ 	B»B»Bÿ	D÷D÷DÊ	F‰F‰FÙ	HÚHÚHÇ
JÄJÄJê
LéLéLû
NúNúN¨
P™P™P∫
R∏R∏R»
T∆T∆T÷
V‘V‘V‰
X‚X‚XÚ
ZZZÄ\˛\˛\é^å	^å^ú`ö	`ö`™b®	b®b∏d∂	d∂d∆fƒ	fƒf‘h“	h“h‚j‡	j‡jlÓ	lÓl˛n¸	n¸nåpä
päpörò
ròr®t¶
t¶t∂v¥
v¥vƒx¬
x¬x“z–
z–z‡|ﬁ
|ﬁ|Ó~Ï
~Ï~¸Ä˙
Ä˙Äâååéèíîïòöõû†°§¶ß™¨≠∞≤≥∂∏πºæø¬ƒ≈» ÀŒ–—‘÷◊⁄‹›‡‚„ÊËÈÏÓÔÚÙı¯˙˚˛ÄÅÑÜáäåçêíìñòôúûü¢§•®™´Æ∞±¥∂∑∫ºΩ¿¬√∆»…ÃŒœ“‘’ÿ⁄€ﬁ‡·‰ÊÁÍÏÌÚÛˆ¯˘¸˛ˇÇÑÖàäãéêëîñóöúù†¢£¶®©¨ÆØ≤¥µ∏∫ªæ¿¡ƒ∆« ÃÕ–“”÷ÿŸ‹ﬁﬂ‚‰ÂËÍÎÓÒÙˆ˜˙¸˝i0 input_vector<0>
i1 input_vector<1>
i2 input_vector<2>
i3 input_vector<3>
i4 input_vector<4>
i5 input_vector<5>
i6 input_vector<6>
i7 input_vector<7>
i8 input_vector<8>
i9 input_vector<9>
i10 input_vector<10>
i11 input_vector<11>
i12 input_vector<12>
i13 input_vector<13>
i14 input_vector<14>
i15 input_vector<15>
i16 input_vector<16>
i17 input_vector<17>
i18 input_vector<18>
i19 input_vector<19>
i20 input_vector<20>
i21 input_vector<21>
i22 input_vector<22>
i23 input_vector<23>
i24 input_vector<24>
i25 input_vector<25>
i26 input_vector<26>
i27 input_vector<27>
i28 input_vector<28>
i29 input_vector<29>
i30 input_vector<30>
i31 input_vector<31>
i32 input_vector<32>
i33 input_vector<33>
i34 input_vector<34>
i35 input_vector<35>
i36 input_vector<36>
i37 input_vector<37>
i38 input_vector<38>
i39 input_vector<39>
i40 input_vector<40>
i41 input_vector<41>
i42 input_vector<42>
i43 input_vector<43>
i44 input_vector<44>
i45 input_vector<45>
i46 input_vector<46>
i47 input_vector<47>
i48 input_vector<48>
i49 input_vector<49>
i50 input_vector<50>
i51 input_vector<51>
i52 input_vector<52>
i53 input_vector<53>
i54 input_vector<54>
i55 input_vector<55>
i56 input_vector<56>
i57 input_vector<57>
i58 input_vector<58>
i59 input_vector<59>
i60 input_vector<60>
i61 input_vector<61>
i62 input_vector<62>
i63 input_vector<63>
l0 top|full_adder_nbit(1)|d_ff(2)|n257
l1 top|full_adder_nbit(1)|d_ff(2)|memory<0>_out
l2 top|full_adder_nbit(1)|d_ff(2)|memory<1>_out
l3 top|full_adder_nbit(1)|d_ff(2)|memory<2>_out
l4 top|full_adder_nbit(1)|d_ff(2)|memory<3>_out
l5 top|full_adder_nbit(1)|d_ff(2)|memory<4>_out
l6 top|full_adder_nbit(1)|d_ff(2)|memory<5>_out
l7 top|full_adder_nbit(1)|d_ff(2)|memory<6>_out
l8 top|full_adder_nbit(1)|d_ff(2)|memory<7>_out
l9 top|full_adder_nbit(1)|d_ff(2)|memory<8>_out
l10 top|full_adder_nbit(1)|d_ff(2)|memory<9>_out
l11 top|full_adder_nbit(1)|d_ff(2)|memory<10>_out
l12 top|full_adder_nbit(1)|d_ff(2)|memory<11>_out
l13 top|full_adder_nbit(1)|d_ff(2)|memory<12>_out
l14 top|full_adder_nbit(1)|d_ff(2)|memory<13>_out
l15 top|full_adder_nbit(1)|d_ff(2)|memory<14>_out
l16 top|full_adder_nbit(1)|d_ff(2)|memory<15>_out
l17 top|full_adder_nbit(1)|d_ff(2)|memory<16>_out
l18 top|full_adder_nbit(1)|d_ff(2)|memory<17>_out
l19 top|full_adder_nbit(1)|d_ff(2)|memory<18>_out
l20 top|full_adder_nbit(1)|d_ff(2)|memory<19>_out
l21 top|full_adder_nbit(1)|d_ff(2)|memory<20>_out
l22 top|full_adder_nbit(1)|d_ff(2)|memory<21>_out
l23 top|full_adder_nbit(1)|d_ff(2)|memory<22>_out
l24 top|full_adder_nbit(1)|d_ff(2)|memory<23>_out
l25 top|full_adder_nbit(1)|d_ff(2)|memory<24>_out
l26 top|full_adder_nbit(1)|d_ff(2)|memory<25>_out
l27 top|full_adder_nbit(1)|d_ff(2)|memory<26>_out
l28 top|full_adder_nbit(1)|d_ff(2)|memory<27>_out
l29 top|full_adder_nbit(1)|d_ff(2)|memory<28>_out
l30 top|full_adder_nbit(1)|d_ff(2)|memory<29>_out
l31 top|full_adder_nbit(1)|d_ff(2)|memory<30>_out
l32 top|full_adder_nbit(1)|d_ff(2)|memory<31>_out
l33 top|full_adder_nbit(1)|d_ff(2)|memory<32>_out
l34 top|full_adder_nbit(1)|d_ff(2)|memory<33>_out
l35 top|full_adder_nbit(1)|d_ff(2)|memory<34>_out
l36 top|full_adder_nbit(1)|d_ff(2)|memory<35>_out
l37 top|full_adder_nbit(1)|d_ff(2)|memory<36>_out
l38 top|full_adder_nbit(1)|d_ff(2)|memory<37>_out
l39 top|full_adder_nbit(1)|d_ff(2)|memory<38>_out
l40 top|full_adder_nbit(1)|d_ff(2)|memory<39>_out
l41 top|full_adder_nbit(1)|d_ff(2)|memory<40>_out
l42 top|full_adder_nbit(1)|d_ff(2)|memory<41>_out
l43 top|full_adder_nbit(1)|d_ff(2)|memory<42>_out
l44 top|full_adder_nbit(1)|d_ff(2)|memory<43>_out
l45 top|full_adder_nbit(1)|d_ff(2)|memory<44>_out
l46 top|full_adder_nbit(1)|d_ff(2)|memory<45>_out
l47 top|full_adder_nbit(1)|d_ff(2)|memory<46>_out
l48 top|full_adder_nbit(1)|d_ff(2)|memory<47>_out
l49 top|full_adder_nbit(1)|d_ff(2)|memory<48>_out
l50 top|full_adder_nbit(1)|d_ff(2)|memory<49>_out
l51 top|full_adder_nbit(1)|d_ff(2)|memory<50>_out
l52 top|full_adder_nbit(1)|d_ff(2)|memory<51>_out
l53 top|full_adder_nbit(1)|d_ff(2)|memory<52>_out
l54 top|full_adder_nbit(1)|d_ff(2)|memory<53>_out
l55 top|full_adder_nbit(1)|d_ff(2)|memory<54>_out
l56 top|full_adder_nbit(1)|d_ff(2)|memory<55>_out
l57 top|full_adder_nbit(1)|d_ff(2)|memory<56>_out
l58 top|full_adder_nbit(1)|d_ff(2)|memory<57>_out
l59 top|full_adder_nbit(1)|d_ff(2)|memory<58>_out
l60 top|full_adder_nbit(1)|d_ff(2)|memory<59>_out
l61 top|full_adder_nbit(1)|d_ff(2)|memory<60>_out
l62 top|full_adder_nbit(1)|d_ff(2)|memory<61>_out
l63 top|full_adder_nbit(1)|d_ff(2)|memory<62>_out
l64 top|full_adder_nbit(1)|d_ff(2)|memory<63>_out
l65 top|full_adder_nbit(1)|d_ff(3)|n257
l66 top|full_adder_nbit(1)|d_ff(3)|memory<0>_out
l67 top|full_adder_nbit(1)|d_ff(3)|memory<1>_out
l68 top|full_adder_nbit(1)|d_ff(3)|memory<2>_out
l69 top|full_adder_nbit(1)|d_ff(3)|memory<3>_out
l70 top|full_adder_nbit(1)|d_ff(3)|memory<4>_out
l71 top|full_adder_nbit(1)|d_ff(3)|memory<5>_out
l72 top|full_adder_nbit(1)|d_ff(3)|memory<6>_out
l73 top|full_adder_nbit(1)|d_ff(3)|memory<7>_out
l74 top|full_adder_nbit(1)|d_ff(3)|memory<8>_out
l75 top|full_adder_nbit(1)|d_ff(3)|memory<9>_out
l76 top|full_adder_nbit(1)|d_ff(3)|memory<10>_out
l77 top|full_adder_nbit(1)|d_ff(3)|memory<11>_out
l78 top|full_adder_nbit(1)|d_ff(3)|memory<12>_out
l79 top|full_adder_nbit(1)|d_ff(3)|memory<13>_out
l80 top|full_adder_nbit(1)|d_ff(3)|memory<14>_out
l81 top|full_adder_nbit(1)|d_ff(3)|memory<15>_out
l82 top|full_adder_nbit(1)|d_ff(3)|memory<16>_out
l83 top|full_adder_nbit(1)|d_ff(3)|memory<17>_out
l84 top|full_adder_nbit(1)|d_ff(3)|memory<18>_out
l85 top|full_adder_nbit(1)|d_ff(3)|memory<19>_out
l86 top|full_adder_nbit(1)|d_ff(3)|memory<20>_out
l87 top|full_adder_nbit(1)|d_ff(3)|memory<21>_out
l88 top|full_adder_nbit(1)|d_ff(3)|memory<22>_out
l89 top|full_adder_nbit(1)|d_ff(3)|memory<23>_out
l90 top|full_adder_nbit(1)|d_ff(3)|memory<24>_out
l91 top|full_adder_nbit(1)|d_ff(3)|memory<25>_out
l92 top|full_adder_nbit(1)|d_ff(3)|memory<26>_out
l93 top|full_adder_nbit(1)|d_ff(3)|memory<27>_out
l94 top|full_adder_nbit(1)|d_ff(3)|memory<28>_out
l95 top|full_adder_nbit(1)|d_ff(3)|memory<29>_out
l96 top|full_adder_nbit(1)|d_ff(3)|memory<30>_out
l97 top|full_adder_nbit(1)|d_ff(3)|memory<31>_out
l98 top|full_adder_nbit(1)|d_ff(3)|memory<32>_out
l99 top|full_adder_nbit(1)|d_ff(3)|memory<33>_out
l100 top|full_adder_nbit(1)|d_ff(3)|memory<34>_out
l101 top|full_adder_nbit(1)|d_ff(3)|memory<35>_out
l102 top|full_adder_nbit(1)|d_ff(3)|memory<36>_out
l103 top|full_adder_nbit(1)|d_ff(3)|memory<37>_out
l104 top|full_adder_nbit(1)|d_ff(3)|memory<38>_out
l105 top|full_adder_nbit(1)|d_ff(3)|memory<39>_out
l106 top|full_adder_nbit(1)|d_ff(3)|memory<40>_out
l107 top|full_adder_nbit(1)|d_ff(3)|memory<41>_out
l108 top|full_adder_nbit(1)|d_ff(3)|memory<42>_out
l109 top|full_adder_nbit(1)|d_ff(3)|memory<43>_out
l110 top|full_adder_nbit(1)|d_ff(3)|memory<44>_out
l111 top|full_adder_nbit(1)|d_ff(3)|memory<45>_out
l112 top|full_adder_nbit(1)|d_ff(3)|memory<46>_out
l113 top|full_adder_nbit(1)|d_ff(3)|memory<47>_out
l114 top|full_adder_nbit(1)|d_ff(3)|memory<48>_out
l115 top|full_adder_nbit(1)|d_ff(3)|memory<49>_out
l116 top|full_adder_nbit(1)|d_ff(3)|memory<50>_out
l117 top|full_adder_nbit(1)|d_ff(3)|memory<51>_out
l118 top|full_adder_nbit(1)|d_ff(3)|memory<52>_out
l119 top|full_adder_nbit(1)|d_ff(3)|memory<53>_out
l120 top|full_adder_nbit(1)|d_ff(3)|memory<54>_out
l121 top|full_adder_nbit(1)|d_ff(3)|memory<55>_out
l122 top|full_adder_nbit(1)|d_ff(3)|memory<56>_out
l123 top|full_adder_nbit(1)|d_ff(3)|memory<57>_out
l124 top|full_adder_nbit(1)|d_ff(3)|memory<58>_out
l125 top|full_adder_nbit(1)|d_ff(3)|memory<59>_out
l126 top|full_adder_nbit(1)|d_ff(3)|memory<60>_out
l127 top|full_adder_nbit(1)|d_ff(3)|memory<61>_out
l128 top|full_adder_nbit(1)|d_ff(3)|memory<62>_out
l129 top|full_adder_nbit(1)|d_ff(3)|memory<63>_out
l130 top|full_adder_nbit(4)|d_ff(5)|n257
l131 top|full_adder_nbit(4)|d_ff(5)|memory<0>_out
l132 top|full_adder_nbit(4)|d_ff(5)|memory<1>_out
l133 top|full_adder_nbit(4)|d_ff(5)|memory<2>_out
l134 top|full_adder_nbit(4)|d_ff(5)|memory<3>_out
l135 top|full_adder_nbit(4)|d_ff(5)|memory<4>_out
l136 top|full_adder_nbit(4)|d_ff(5)|memory<5>_out
l137 top|full_adder_nbit(4)|d_ff(5)|memory<6>_out
l138 top|full_adder_nbit(4)|d_ff(5)|memory<7>_out
l139 top|full_adder_nbit(4)|d_ff(5)|memory<8>_out
l140 top|full_adder_nbit(4)|d_ff(5)|memory<9>_out
l141 top|full_adder_nbit(4)|d_ff(5)|memory<10>_out
l142 top|full_adder_nbit(4)|d_ff(5)|memory<11>_out
l143 top|full_adder_nbit(4)|d_ff(5)|memory<12>_out
l144 top|full_adder_nbit(4)|d_ff(5)|memory<13>_out
l145 top|full_adder_nbit(4)|d_ff(5)|memory<14>_out
l146 top|full_adder_nbit(4)|d_ff(5)|memory<15>_out
l147 top|full_adder_nbit(4)|d_ff(5)|memory<16>_out
l148 top|full_adder_nbit(4)|d_ff(5)|memory<17>_out
l149 top|full_adder_nbit(4)|d_ff(5)|memory<18>_out
l150 top|full_adder_nbit(4)|d_ff(5)|memory<19>_out
l151 top|full_adder_nbit(4)|d_ff(5)|memory<20>_out
l152 top|full_adder_nbit(4)|d_ff(5)|memory<21>_out
l153 top|full_adder_nbit(4)|d_ff(5)|memory<22>_out
l154 top|full_adder_nbit(4)|d_ff(5)|memory<23>_out
l155 top|full_adder_nbit(4)|d_ff(5)|memory<24>_out
l156 top|full_adder_nbit(4)|d_ff(5)|memory<25>_out
l157 top|full_adder_nbit(4)|d_ff(5)|memory<26>_out
l158 top|full_adder_nbit(4)|d_ff(5)|memory<27>_out
l159 top|full_adder_nbit(4)|d_ff(5)|memory<28>_out
l160 top|full_adder_nbit(4)|d_ff(5)|memory<29>_out
l161 top|full_adder_nbit(4)|d_ff(5)|memory<30>_out
l162 top|full_adder_nbit(4)|d_ff(5)|memory<31>_out
l163 top|full_adder_nbit(4)|d_ff(5)|memory<32>_out
l164 top|full_adder_nbit(4)|d_ff(5)|memory<33>_out
l165 top|full_adder_nbit(4)|d_ff(5)|memory<34>_out
l166 top|full_adder_nbit(4)|d_ff(5)|memory<35>_out
l167 top|full_adder_nbit(4)|d_ff(5)|memory<36>_out
l168 top|full_adder_nbit(4)|d_ff(5)|memory<37>_out
l169 top|full_adder_nbit(4)|d_ff(5)|memory<38>_out
l170 top|full_adder_nbit(4)|d_ff(5)|memory<39>_out
l171 top|full_adder_nbit(4)|d_ff(5)|memory<40>_out
l172 top|full_adder_nbit(4)|d_ff(5)|memory<41>_out
l173 top|full_adder_nbit(4)|d_ff(5)|memory<42>_out
l174 top|full_adder_nbit(4)|d_ff(5)|memory<43>_out
l175 top|full_adder_nbit(4)|d_ff(5)|memory<44>_out
l176 top|full_adder_nbit(4)|d_ff(5)|memory<45>_out
l177 top|full_adder_nbit(4)|d_ff(5)|memory<46>_out
l178 top|full_adder_nbit(4)|d_ff(5)|memory<47>_out
l179 top|full_adder_nbit(4)|d_ff(5)|memory<48>_out
l180 top|full_adder_nbit(4)|d_ff(5)|memory<49>_out
l181 top|full_adder_nbit(4)|d_ff(5)|memory<50>_out
l182 top|full_adder_nbit(4)|d_ff(5)|memory<51>_out
l183 top|full_adder_nbit(4)|d_ff(5)|memory<52>_out
l184 top|full_adder_nbit(4)|d_ff(5)|memory<53>_out
l185 top|full_adder_nbit(4)|d_ff(5)|memory<54>_out
l186 top|full_adder_nbit(4)|d_ff(5)|memory<55>_out
l187 top|full_adder_nbit(4)|d_ff(5)|memory<56>_out
l188 top|full_adder_nbit(4)|d_ff(5)|memory<57>_out
l189 top|full_adder_nbit(4)|d_ff(5)|memory<58>_out
l190 top|full_adder_nbit(4)|d_ff(5)|memory<59>_out
l191 top|full_adder_nbit(4)|d_ff(5)|memory<60>_out
l192 top|full_adder_nbit(4)|d_ff(5)|memory<61>_out
l193 top|full_adder_nbit(4)|d_ff(5)|memory<62>_out
l194 top|full_adder_nbit(4)|d_ff(5)|memory<63>_out
l195 top|full_adder_nbit(4)|d_ff(6)|n257
l196 top|full_adder_nbit(4)|d_ff(6)|memory<0>_out
l197 top|full_adder_nbit(4)|d_ff(6)|memory<1>_out
l198 top|full_adder_nbit(4)|d_ff(6)|memory<2>_out
l199 top|full_adder_nbit(4)|d_ff(6)|memory<3>_out
l200 top|full_adder_nbit(4)|d_ff(6)|memory<4>_out
l201 top|full_adder_nbit(4)|d_ff(6)|memory<5>_out
l202 top|full_adder_nbit(4)|d_ff(6)|memory<6>_out
l203 top|full_adder_nbit(4)|d_ff(6)|memory<7>_out
l204 top|full_adder_nbit(4)|d_ff(6)|memory<8>_out
l205 top|full_adder_nbit(4)|d_ff(6)|memory<9>_out
l206 top|full_adder_nbit(4)|d_ff(6)|memory<10>_out
l207 top|full_adder_nbit(4)|d_ff(6)|memory<11>_out
l208 top|full_adder_nbit(4)|d_ff(6)|memory<12>_out
l209 top|full_adder_nbit(4)|d_ff(6)|memory<13>_out
l210 top|full_adder_nbit(4)|d_ff(6)|memory<14>_out
l211 top|full_adder_nbit(4)|d_ff(6)|memory<15>_out
l212 top|full_adder_nbit(4)|d_ff(6)|memory<16>_out
l213 top|full_adder_nbit(4)|d_ff(6)|memory<17>_out
l214 top|full_adder_nbit(4)|d_ff(6)|memory<18>_out
l215 top|full_adder_nbit(4)|d_ff(6)|memory<19>_out
l216 top|full_adder_nbit(4)|d_ff(6)|memory<20>_out
l217 top|full_adder_nbit(4)|d_ff(6)|memory<21>_out
l218 top|full_adder_nbit(4)|d_ff(6)|memory<22>_out
l219 top|full_adder_nbit(4)|d_ff(6)|memory<23>_out
l220 top|full_adder_nbit(4)|d_ff(6)|memory<24>_out
l221 top|full_adder_nbit(4)|d_ff(6)|memory<25>_out
l222 top|full_adder_nbit(4)|d_ff(6)|memory<26>_out
l223 top|full_adder_nbit(4)|d_ff(6)|memory<27>_out
l224 top|full_adder_nbit(4)|d_ff(6)|memory<28>_out
l225 top|full_adder_nbit(4)|d_ff(6)|memory<29>_out
l226 top|full_adder_nbit(4)|d_ff(6)|memory<30>_out
l227 top|full_adder_nbit(4)|d_ff(6)|memory<31>_out
l228 top|full_adder_nbit(4)|d_ff(6)|memory<32>_out
l229 top|full_adder_nbit(4)|d_ff(6)|memory<33>_out
l230 top|full_adder_nbit(4)|d_ff(6)|memory<34>_out
l231 top|full_adder_nbit(4)|d_ff(6)|memory<35>_out
l232 top|full_adder_nbit(4)|d_ff(6)|memory<36>_out
l233 top|full_adder_nbit(4)|d_ff(6)|memory<37>_out
l234 top|full_adder_nbit(4)|d_ff(6)|memory<38>_out
l235 top|full_adder_nbit(4)|d_ff(6)|memory<39>_out
l236 top|full_adder_nbit(4)|d_ff(6)|memory<40>_out
l237 top|full_adder_nbit(4)|d_ff(6)|memory<41>_out
l238 top|full_adder_nbit(4)|d_ff(6)|memory<42>_out
l239 top|full_adder_nbit(4)|d_ff(6)|memory<43>_out
l240 top|full_adder_nbit(4)|d_ff(6)|memory<44>_out
l241 top|full_adder_nbit(4)|d_ff(6)|memory<45>_out
l242 top|full_adder_nbit(4)|d_ff(6)|memory<46>_out
l243 top|full_adder_nbit(4)|d_ff(6)|memory<47>_out
l244 top|full_adder_nbit(4)|d_ff(6)|memory<48>_out
l245 top|full_adder_nbit(4)|d_ff(6)|memory<49>_out
l246 top|full_adder_nbit(4)|d_ff(6)|memory<50>_out
l247 top|full_adder_nbit(4)|d_ff(6)|memory<51>_out
l248 top|full_adder_nbit(4)|d_ff(6)|memory<52>_out
l249 top|full_adder_nbit(4)|d_ff(6)|memory<53>_out
l250 top|full_adder_nbit(4)|d_ff(6)|memory<54>_out
l251 top|full_adder_nbit(4)|d_ff(6)|memory<55>_out
l252 top|full_adder_nbit(4)|d_ff(6)|memory<56>_out
l253 top|full_adder_nbit(4)|d_ff(6)|memory<57>_out
l254 top|full_adder_nbit(4)|d_ff(6)|memory<58>_out
l255 top|full_adder_nbit(4)|d_ff(6)|memory<59>_out
l256 top|full_adder_nbit(4)|d_ff(6)|memory<60>_out
l257 top|full_adder_nbit(4)|d_ff(6)|memory<61>_out
l258 top|full_adder_nbit(4)|d_ff(6)|memory<62>_out
l259 top|full_adder_nbit(4)|d_ff(6)|memory<63>_out
l260 top|full_adder_nbit(7)|d_ff(8)|n257
l261 top|full_adder_nbit(7)|d_ff(8)|memory<0>_out
l262 top|full_adder_nbit(7)|d_ff(8)|memory<1>_out
l263 top|full_adder_nbit(7)|d_ff(8)|memory<2>_out
l264 top|full_adder_nbit(7)|d_ff(8)|memory<3>_out
l265 top|full_adder_nbit(7)|d_ff(8)|memory<4>_out
l266 top|full_adder_nbit(7)|d_ff(8)|memory<5>_out
l267 top|full_adder_nbit(7)|d_ff(8)|memory<6>_out
l268 top|full_adder_nbit(7)|d_ff(8)|memory<7>_out
l269 top|full_adder_nbit(7)|d_ff(8)|memory<8>_out
l270 top|full_adder_nbit(7)|d_ff(8)|memory<9>_out
l271 top|full_adder_nbit(7)|d_ff(8)|memory<10>_out
l272 top|full_adder_nbit(7)|d_ff(8)|memory<11>_out
l273 top|full_adder_nbit(7)|d_ff(8)|memory<12>_out
l274 top|full_adder_nbit(7)|d_ff(8)|memory<13>_out
l275 top|full_adder_nbit(7)|d_ff(8)|memory<14>_out
l276 top|full_adder_nbit(7)|d_ff(8)|memory<15>_out
l277 top|full_adder_nbit(7)|d_ff(8)|memory<16>_out
l278 top|full_adder_nbit(7)|d_ff(8)|memory<17>_out
l279 top|full_adder_nbit(7)|d_ff(8)|memory<18>_out
l280 top|full_adder_nbit(7)|d_ff(8)|memory<19>_out
l281 top|full_adder_nbit(7)|d_ff(8)|memory<20>_out
l282 top|full_adder_nbit(7)|d_ff(8)|memory<21>_out
l283 top|full_adder_nbit(7)|d_ff(8)|memory<22>_out
l284 top|full_adder_nbit(7)|d_ff(8)|memory<23>_out
l285 top|full_adder_nbit(7)|d_ff(8)|memory<24>_out
l286 top|full_adder_nbit(7)|d_ff(8)|memory<25>_out
l287 top|full_adder_nbit(7)|d_ff(8)|memory<26>_out
l288 top|full_adder_nbit(7)|d_ff(8)|memory<27>_out
l289 top|full_adder_nbit(7)|d_ff(8)|memory<28>_out
l290 top|full_adder_nbit(7)|d_ff(8)|memory<29>_out
l291 top|full_adder_nbit(7)|d_ff(8)|memory<30>_out
l292 top|full_adder_nbit(7)|d_ff(8)|memory<31>_out
l293 top|full_adder_nbit(7)|d_ff(8)|memory<32>_out
l294 top|full_adder_nbit(7)|d_ff(8)|memory<33>_out
l295 top|full_adder_nbit(7)|d_ff(8)|memory<34>_out
l296 top|full_adder_nbit(7)|d_ff(8)|memory<35>_out
l297 top|full_adder_nbit(7)|d_ff(8)|memory<36>_out
l298 top|full_adder_nbit(7)|d_ff(8)|memory<37>_out
l299 top|full_adder_nbit(7)|d_ff(8)|memory<38>_out
l300 top|full_adder_nbit(7)|d_ff(8)|memory<39>_out
l301 top|full_adder_nbit(7)|d_ff(8)|memory<40>_out
l302 top|full_adder_nbit(7)|d_ff(8)|memory<41>_out
l303 top|full_adder_nbit(7)|d_ff(8)|memory<42>_out
l304 top|full_adder_nbit(7)|d_ff(8)|memory<43>_out
l305 top|full_adder_nbit(7)|d_ff(8)|memory<44>_out
l306 top|full_adder_nbit(7)|d_ff(8)|memory<45>_out
l307 top|full_adder_nbit(7)|d_ff(8)|memory<46>_out
l308 top|full_adder_nbit(7)|d_ff(8)|memory<47>_out
l309 top|full_adder_nbit(7)|d_ff(8)|memory<48>_out
l310 top|full_adder_nbit(7)|d_ff(8)|memory<49>_out
l311 top|full_adder_nbit(7)|d_ff(8)|memory<50>_out
l312 top|full_adder_nbit(7)|d_ff(8)|memory<51>_out
l313 top|full_adder_nbit(7)|d_ff(8)|memory<52>_out
l314 top|full_adder_nbit(7)|d_ff(8)|memory<53>_out
l315 top|full_adder_nbit(7)|d_ff(8)|memory<54>_out
l316 top|full_adder_nbit(7)|d_ff(8)|memory<55>_out
l317 top|full_adder_nbit(7)|d_ff(8)|memory<56>_out
l318 top|full_adder_nbit(7)|d_ff(8)|memory<57>_out
l319 top|full_adder_nbit(7)|d_ff(8)|memory<58>_out
l320 top|full_adder_nbit(7)|d_ff(8)|memory<59>_out
l321 top|full_adder_nbit(7)|d_ff(8)|memory<60>_out
l322 top|full_adder_nbit(7)|d_ff(8)|memory<61>_out
l323 top|full_adder_nbit(7)|d_ff(8)|memory<62>_out
l324 top|full_adder_nbit(7)|d_ff(8)|memory<63>_out
l325 top|full_adder_nbit(7)|d_ff(9)|n257
l326 top|full_adder_nbit(7)|d_ff(9)|memory<0>_out
l327 top|full_adder_nbit(7)|d_ff(9)|memory<1>_out
l328 top|full_adder_nbit(7)|d_ff(9)|memory<2>_out
l329 top|full_adder_nbit(7)|d_ff(9)|memory<3>_out
l330 top|full_adder_nbit(7)|d_ff(9)|memory<4>_out
l331 top|full_adder_nbit(7)|d_ff(9)|memory<5>_out
l332 top|full_adder_nbit(7)|d_ff(9)|memory<6>_out
l333 top|full_adder_nbit(7)|d_ff(9)|memory<7>_out
l334 top|full_adder_nbit(7)|d_ff(9)|memory<8>_out
l335 top|full_adder_nbit(7)|d_ff(9)|memory<9>_out
l336 top|full_adder_nbit(7)|d_ff(9)|memory<10>_out
l337 top|full_adder_nbit(7)|d_ff(9)|memory<11>_out
l338 top|full_adder_nbit(7)|d_ff(9)|memory<12>_out
l339 top|full_adder_nbit(7)|d_ff(9)|memory<13>_out
l340 top|full_adder_nbit(7)|d_ff(9)|memory<14>_out
l341 top|full_adder_nbit(7)|d_ff(9)|memory<15>_out
l342 top|full_adder_nbit(7)|d_ff(9)|memory<16>_out
l343 top|full_adder_nbit(7)|d_ff(9)|memory<17>_out
l344 top|full_adder_nbit(7)|d_ff(9)|memory<18>_out
l345 top|full_adder_nbit(7)|d_ff(9)|memory<19>_out
l346 top|full_adder_nbit(7)|d_ff(9)|memory<20>_out
l347 top|full_adder_nbit(7)|d_ff(9)|memory<21>_out
l348 top|full_adder_nbit(7)|d_ff(9)|memory<22>_out
l349 top|full_adder_nbit(7)|d_ff(9)|memory<23>_out
l350 top|full_adder_nbit(7)|d_ff(9)|memory<24>_out
l351 top|full_adder_nbit(7)|d_ff(9)|memory<25>_out
l352 top|full_adder_nbit(7)|d_ff(9)|memory<26>_out
l353 top|full_adder_nbit(7)|d_ff(9)|memory<27>_out
l354 top|full_adder_nbit(7)|d_ff(9)|memory<28>_out
l355 top|full_adder_nbit(7)|d_ff(9)|memory<29>_out
l356 top|full_adder_nbit(7)|d_ff(9)|memory<30>_out
l357 top|full_adder_nbit(7)|d_ff(9)|memory<31>_out
l358 top|full_adder_nbit(7)|d_ff(9)|memory<32>_out
l359 top|full_adder_nbit(7)|d_ff(9)|memory<33>_out
l360 top|full_adder_nbit(7)|d_ff(9)|memory<34>_out
l361 top|full_adder_nbit(7)|d_ff(9)|memory<35>_out
l362 top|full_adder_nbit(7)|d_ff(9)|memory<36>_out
l363 top|full_adder_nbit(7)|d_ff(9)|memory<37>_out
l364 top|full_adder_nbit(7)|d_ff(9)|memory<38>_out
l365 top|full_adder_nbit(7)|d_ff(9)|memory<39>_out
l366 top|full_adder_nbit(7)|d_ff(9)|memory<40>_out
l367 top|full_adder_nbit(7)|d_ff(9)|memory<41>_out
l368 top|full_adder_nbit(7)|d_ff(9)|memory<42>_out
l369 top|full_adder_nbit(7)|d_ff(9)|memory<43>_out
l370 top|full_adder_nbit(7)|d_ff(9)|memory<44>_out
l371 top|full_adder_nbit(7)|d_ff(9)|memory<45>_out
l372 top|full_adder_nbit(7)|d_ff(9)|memory<46>_out
l373 top|full_adder_nbit(7)|d_ff(9)|memory<47>_out
l374 top|full_adder_nbit(7)|d_ff(9)|memory<48>_out
l375 top|full_adder_nbit(7)|d_ff(9)|memory<49>_out
l376 top|full_adder_nbit(7)|d_ff(9)|memory<50>_out
l377 top|full_adder_nbit(7)|d_ff(9)|memory<51>_out
l378 top|full_adder_nbit(7)|d_ff(9)|memory<52>_out
l379 top|full_adder_nbit(7)|d_ff(9)|memory<53>_out
l380 top|full_adder_nbit(7)|d_ff(9)|memory<54>_out
l381 top|full_adder_nbit(7)|d_ff(9)|memory<55>_out
l382 top|full_adder_nbit(7)|d_ff(9)|memory<56>_out
l383 top|full_adder_nbit(7)|d_ff(9)|memory<57>_out
l384 top|full_adder_nbit(7)|d_ff(9)|memory<58>_out
l385 top|full_adder_nbit(7)|d_ff(9)|memory<59>_out
l386 top|full_adder_nbit(7)|d_ff(9)|memory<60>_out
l387 top|full_adder_nbit(7)|d_ff(9)|memory<61>_out
l388 top|full_adder_nbit(7)|d_ff(9)|memory<62>_out
l389 top|full_adder_nbit(7)|d_ff(9)|memory<63>_out
o0 sum<0>
o1 sum<1>
o2 sum<2>
o3 sum<3>
o4 sum<4>
o5 sum<5>
o6 sum<6>
o7 sum<7>
o8 sum<8>
o9 sum<9>
o10 sum<10>
o11 sum<11>
o12 sum<12>
o13 sum<13>
o14 sum<14>
o15 sum<15>
o16 sum<16>
o17 sum<17>
o18 sum<18>
o19 sum<19>
o20 sum<20>
o21 sum<21>
o22 sum<22>
o23 sum<23>
o24 sum<24>
o25 sum<25>
o26 sum<26>
o27 sum<27>
o28 sum<28>
o29 sum<29>
o30 sum<30>
o31 sum<31>
o32 sum<32>
o33 sum<33>
o34 sum<34>
o35 sum<35>
o36 sum<36>
o37 sum<37>
o38 sum<38>
o39 sum<39>
o40 sum<40>
o41 sum<41>
o42 sum<42>
o43 sum<43>
o44 sum<44>
o45 sum<45>
o46 sum<46>
o47 sum<47>
o48 sum<48>
o49 sum<49>
o50 sum<50>
o51 sum<51>
o52 sum<52>
o53 sum<53>
o54 sum<54>
o55 sum<55>
o56 sum<56>
o57 sum<57>
o58 sum<58>
o59 sum<59>
o60 sum<60>
o61 sum<61>
o62 sum<62>
o63 sum<63>
o64 Err_out_Final
c
top 
This file was written by ABC on Sun Sep 18 21:00:49 2016
For information about AIGER format, refer to http://fmv.jku.at/aiger
The verilog file pipe_add_tmr_i64_l1.v has been converted using the following commands:
vl2mv pipe_add_tmr_i64_l1.v       # generates pipe_add_tmr_i64_l1.mv
abc -c "read_blif_mv pipe_add_tmr_i64_l1.mv; write_aiger -s pipe_add_tmr_i64_l1.aig"
pipe_add_tmr_i64_l1.v:
___________________________
// this file uses jinja templates for code generation, see http://jinja.pocoo.org
`define WORD_WIDTH 64  // the bit width of the input, adders, and output signals
`define LAYERS 1      // defines how often the adder is cascaded

module top(
    input_vector,   // the input vector, WORD_WIDTH broad
    sum,            // the final result, WORD_WIDTH broad
    clk,
    Err_out_Final   // the alarm output
    );
    
    input   clk;
    input   [`WORD_WIDTH-1:0] input_vector;
    output  [`WORD_WIDTH-1:0] sum;
    output  Err_out_Final;

    wire [`WORD_WIDTH-1:0] b_out_R1_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R1_0 = input_vector;

    wire [`WORD_WIDTH-1:0] b_out_R2_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R2_0 = input_vector;

    wire [`WORD_WIDTH-1:0] b_out_R3_0 = input_vector;
    wire [`WORD_WIDTH-1:0] result_R3_0 = input_vector;

    // -- begin unrolled code --
{% for idx in range(1,`LAYERS+1) %}
    wire [`WORD_WIDTH-1:0] b_out_R1_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R1_{{ idx }};
    full_adder_nbit adder_R1_{{idx}}(clk, result_R1_{{idx - 1}}, b_out_R1_{{idx - 1}}, result_R1_{{idx}}, b_out_R1_{{idx}});

    wire [`WORD_WIDTH-1:0] b_out_R2_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R2_{{ idx }};
    full_adder_nbit adder_R2_{{idx}}(clk, result_R2_{{idx - 1}}, b_out_R2_{{idx - 1}}, result_R2_{{idx}}, b_out_R2_{{idx}});

    wire [`WORD_WIDTH-1:0] b_out_R3_{{ idx }};
    wire [`WORD_WIDTH-1:0] result_R3_{{ idx }};
    full_adder_nbit adder_R3_{{idx}}(clk, result_R3_{{idx - 1}}, b_out_R3_{{idx - 1}}, result_R3_{{idx}}, b_out_R3_{{idx}});
{% endfor %}
    // -- end unrolled code --

    tmr tmr_module(result_R1_`LAYERS, result_R2_`LAYERS, result_R3_`LAYERS, sum);

    //assign Err_out_Final = 0;


endmodule // top module


module full_adder_nbit(
    clk,
    in_a,
    in_b,
    sum,
    out_b
    );
    
    input   [`WORD_WIDTH-1:0] in_a;
    input   [`WORD_WIDTH-1:0] in_b;
    input clk;
    output [`WORD_WIDTH-1:0] sum;
    output [`WORD_WIDTH-1:0] out_b;
    
    wire [`WORD_WIDTH-1:0] res; 
    assign res = in_a + in_b;

    d_ff result(clk, res, sum);
    d_ff input_delay(clk, in_b, out_b);

endmodule // full_adder_nbit

module d_ff(clk, in, out);
    input clk;
    input  [`WORD_WIDTH-1:0] in;
    output [`WORD_WIDTH-1:0] out;

    reg [`WORD_WIDTH-1:0] memory;

    assign out = memory;

    initial begin
        memory = 1'b0;
    end

    always @(posedge clk) begin
        memory = in;
    end
endmodule // d_ff

module tmr(in_1, in_2, in_3, out);
    input  [`WORD_WIDTH-1:0] in_1;
    input  [`WORD_WIDTH-1:0] in_2;
    input  [`WORD_WIDTH-1:0] in_3;
    output [`WORD_WIDTH-1:0] out;

    assign out = (in_1 & in_2) | (in_2 & in_3) | (in_1 & in_3);
    
endmodule


